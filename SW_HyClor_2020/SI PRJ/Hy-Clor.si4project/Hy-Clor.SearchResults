---- ucStableCnt Matches (8 in 1 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 203 : unsigned char ucStableCnt;
GetCellRealCurrent line 1175 : 		ucStableCnt = 0;
GetCellRealCurrent line 1195 : 		ucStableCnt++;
GetCellRealCurrent line 1197 : 		if(ucStableCnt == ADC_STABLE_NUM)
GetCellRealCurrent line 1199 : 			ucStableCnt = 0;
GetCellRealCurrent line 1248 : 			ucStableCnt++;
GetCellRealCurrent line 1252 : 		if(ucStableCnt == ADC_STABLE_NUM)
GetCellRealCurrent line 1254 : 			ucStableCnt = 0;
---- bADCDoneFlag Matches (7 in 1 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 162 : unsigned char bADCDoneFlag       = _FALSE;
GetCellRealCurrent line 1187 : 	if(bADCDoneFlag)
GetCellRealCurrent line 1230 : 		bADCDoneFlag = _FALSE;
GetCellRealCurrent line 1234 : 	if(bADCDoneFlag)
GetCellRealCurrent line 1279 : 		bADCDoneFlag = _FALSE;
CurrentADCProcess line 2920 : 		if(bADCDoneFlag == _FALSE)
CurrentADCProcess line 2922 : 			bADCDoneFlag = _TRUE;
---- CurrentADCProcess Matches (3 in 3 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 2911 : void CurrentADCProcess(void)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\inc\ctrl.h line 32 : extern void CurrentADCProcess(void);
AdcContIrqCallback line 130 : 	CurrentADCProcess();	
---- ADCStart Matches (5 in 2 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\mcu.c line 92 : void ADCStart(void)
Gpio_IRQHandler line 182 : 			ADCStart();	
Tim1Int line 208 : 		ADCStart();
Tim3Int line 231 : 		ADCStart();	
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\inc\mcu.h line 20 : extern void ADCStart(void);
---- GpioPin12 Matches (19 in 4 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 2581 : #define AC_POWER_DETECT   Gpio_GetInputIO(GpioPortA, GpioPin12)
en_gpio_pin line 109 :     GpioPin12 = 12u,                ///< GPIO PIN12
PWMStop line 59 : 	Gpio_ClearIrq(GpioPortA, GpioPin12);
Gpio_IRQHandler line 142 :         if(TRUE == Gpio_GetIrqStatus(GpioPortA, GpioPin12))
Gpio_IRQHandler line 144 :             Gpio_ClearIrq(GpioPortA, GpioPin12);
Gpio_IRQHandler line 164 :         if(TRUE == Gpio_GetIrqStatus(GpioPortA, GpioPin12))
Gpio_IRQHandler line 166 :             Gpio_ClearIrq(GpioPortA, GpioPin12);
Init_IOPorts line 326 : 	Gpio_Init(GpioPortA, GpioPin12, &stcGpioCfg);   //AC POWER
Init_IOPorts line 328 :     Gpio_ClearIrq(GpioPortA, GpioPin12);
Init_IOPorts line 330 :     Gpio_EnableIrq(GpioPortA, GpioPin12, GpioIrqFalling);
Init_IOPorts line 342 :     Gpio_Init(GpioPortA, GpioPin12, &stcGpioCfg);  //Zero Cross Detect
Init_IOPorts line 343 :     Gpio_ClearIrq(GpioPortA, GpioPin12);
Init_IOPorts line 345 :     Gpio_EnableIrq(GpioPortA, GpioPin12, GpioIrqFalling);
Init_IOPorts line 416 : 	Gpio_Init(GpioPortB, GpioPin12, &stcGpioCfg);   //CS
Init_IOPorts line 421 : 	Gpio_SetIO(GpioPortB, GpioPin12);          
Init_ADC line 553 :     Gpio_SetAnalogMode(GpioPortB, GpioPin12);        //PB12 (AIN19)
Init_ADC line 555 :     Gpio_Init(GpioPortB, GpioPin12, &stcAdcAN0Port);
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\st7565r.c line 22 : #define LCD_CS_HIGH            Gpio_SetIO(GpioPortB, GpioPin12)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\st7565r.c line 23 : #define LCD_CS_LOW             Gpio_ClrIO(GpioPortB, GpioPin12)
---- uiCellRealCurrent Matches (16 in 1 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 243 : unsigned int  uiCellRealCurrent = 0;
GetCellRealCurrent line 1180 : 		uiCellRealCurrent = 0;
GetCellRealCurrent line 1218 : 			uiCellRealCurrent = (uiTemp/10);	
GetCellRealCurrent line 1223 : 			uiCellRealCurrent=3;//JIE_DEBUG
GetCellRealCurrent line 1225 : 			uiCellRealCurrent = 0;
GetCellRealCurrent line 1269 : 			uiCellRealCurrent = (uiTemp/100);	
GetCellRealCurrent line 1275 : 			uiCellRealCurrent = 0;
CellRealCurrentDisplay line 1300 : 		//LEDDisplayHexValue(uiCellRealCurrent);
CellRealCurrentDisplay line 1315 : 			uiCellRealCurrent = 0;
CellRealCurrentDisplay line 1317 : 		iTemp = uiCellRealCurrent;
CellOutputCalibration line 1549 : 	if(uiCellRealCurrent>uiStdHigh)
CellOutputCalibration line 1552 : 		uiTol = uiCellRealCurrent - uiStdH;
CellOutputCalibration line 1594 : 	else if(uiCellRealCurrent<uiStdLow)
CellOutputCalibration line 1597 : 		uiTol = uiStdL - uiCellRealCurrent;
CheckCellCurrent line 2332 : 	if(uiCellRealCurrent<150)
CheckWaterSaltLevel line 2641 : 	if((uiCurrentDuty >= uiCurrentMaxDuty)&&(uiCellRealCurrent < uiLowSaltCurrent)&&(bStopOutputFlag == _FALSE))
---- uiCellRealCurrent Matches (16 in 1 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 243 : unsigned int  uiCellRealCurrent = 0;
GetCellRealCurrent line 1180 : 		uiCellRealCurrent = 0;
GetCellRealCurrent line 1218 : 			uiCellRealCurrent = (uiTemp/10);	
GetCellRealCurrent line 1223 : 			uiCellRealCurrent=3;//JIE_DEBUG
GetCellRealCurrent line 1225 : 			uiCellRealCurrent = 0;
GetCellRealCurrent line 1269 : 			uiCellRealCurrent = (uiTemp/100);	
GetCellRealCurrent line 1275 : 			uiCellRealCurrent = 0;
CellRealCurrentDisplay line 1300 : 		//LEDDisplayHexValue(uiCellRealCurrent);
CellRealCurrentDishttps://item.szlcsc.com/253992.htmlplay line 1315 : 			uiCellRealCurrent = 0;
CellRealCurrentDisplay line 1317 : 		iTemp = uiCellRealCurrent;
CellOutputCalibration line 1549 : 	if(uiCellRealCurrent>uiStdHigh)
CellOutputCalibration line 1552 : 		uiTol = uiCellRealCurrent - uiStdH;
CellOutputCalibration line 1594 : 	else if(uiCellRealCurrent<uiStdLow)
CellOutputCalibration line 1597 : 		uiTol = uiStdL - uiCellRealCurrent;
CheckCellCurrent line 2332 : 	if(uiCellRealCurrent<150)
CheckWaterSaltLevel line 2641 : 	if((uiCurrentDuty >= uiCurrentMaxDuty)&&(uiCellRealCurrent < uiLowSaltCurrent)&&(bStopOutputFlag == _FALSE))
---- GpioPin13 Matches (40 in 4 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 22 : #define CURRENT_CTRL                 Gpio_ReadOutputIO(GpioPortC, GpioPin13)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 23 : #define CURRENT_CTRL_OFF              Gpio_SetIO(GpioPortC, GpioPin13)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 24 : #define CURRENT_CTRL_ON             Gpio_ClrIO(GpioPortC, GpioPin13)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 34 : #define CURRENT_CTRL                 Gpio_ReadOutputIO(GpioPortC, GpioPin13)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 35 : #define CURRENT_CTRL_ON            Gpio_SetIO(GpioPortC, GpioPin13)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 36 : #define CURRENT_CTRL_OFF             Gpio_ClrIO(GpioPortC, GpioPin13)
LEDControl line 519 : 				Gpio_SetIO(GpioPortB, GpioPin13);
LEDControl line 570 : 				Gpio_ClrIO(GpioPortB, GpioPin13);
LEDALLControl line 962 : 		Gpio_SetIO(GpioPortB, GpioPin13);
LEDALLControl line 983 : 		Gpio_ClrIO(GpioPortB, GpioPin13);
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 2582 : #define AC_POWER_DETECT   Gpio_GetInputIO(GpioPortB, GpioPin13)
en_gpio_pin line 110 :     GpioPin13 = 13u,                ///< GPIO PIN13
ALLStop line 74 : 	Gpio_SetIO(GpioPortC, GpioPin13);
ALLStart line 87 : 	Gpio_SetIO(GpioPortC, GpioPin13);
Gpio_IRQHandler line 152 :         if(TRUE == Gpio_GetIrqStatus(GpioPortB, GpioPin13))
Gpio_IRQHandler line 154 :             Gpio_ClearIrq(GpioPortB, GpioPin13);
Gpio_IRQHandler line 172 : 			Gpio_SetIO(GpioPortC, GpioPin13);
Tim3Int line 247 : 		if(Gpio_ReadOutputIO(GpioPortC, GpioPin13) == _HIGH)
Tim3Int line 250 : 			Gpio_ClrIO(GpioPortC, GpioPin13);
Tim3Int line 257 : 			Gpio_SetIO(GpioPortC, GpioPin13);
Init_IOPorts line 334 : 	Gpio_Init(GpioPortB, GpioPin13, &stcGpioCfg);   //AC POWER
Init_IOPorts line 335 :     Gpio_ClearIrq(GpioPortB, GpioPin13);
Init_IOPorts line 337 :     Gpio_EnableIrq(GpioPortB, GpioPin13, GpioIrqFalling);
Init_IOPorts line 358 : 	Gpio_ClrIO(GpioPortC, GpioPin13);
Init_IOPorts line 359 : 	Gpio_Init(GpioPortC, GpioPin13, &stcGpioCfg);	
Init_IOPorts line 360 : 	Gpio_SetIO(GpioPortC, GpioPin13);
Init_IOPorts line 362 : 	Gpio_SetIO(GpioPortC, GpioPin13);
Init_IOPorts line 363 : 	Gpio_Init(GpioPortC, GpioPin13, &stcGpioCfg);	
Init_IOPorts line 380 : 	Gpio_ClrIO(GpioPortB, GpioPin13);
Init_IOPorts line 398 : 	Gpio_Init(GpioPortB, GpioPin13, &stcGpioCfg);
Init_IOPorts line 417 :     Gpio_Init(GpioPortB, GpioPin13, &stcGpioCfg);   //RS
Init_IOPorts line 422 : 	Gpio_ClrIO(GpioPortB, GpioPin13);
Init_PWM line 616 : 	Gpio_ClrIO(GpioPortC, GpioPin13);
Init_PWM line 617 :     Gpio_Init(GpioPortC, GpioPin13, &stcTIM3Port);
Init_PWM line 618 :     Gpio_SetAfMode(GpioPortC,GpioPin13,GpioAf3);               //PC13设置为TIM3_CH1B	
MCUStopOutput line 694 : 	Gpio_ClrIO(GpioPortC, GpioPin13);
MCUStopOutput line 703 : 	Gpio_ClrIO(GpioPortB, GpioPin13);
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\st7565r.c line 19 : //#define CURRENT_CTRL                 Gpio_ReadOutputIO(GpioPortC, GpioPin13)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\st7565r.c line 24 : #define LCD_RS_HIGH            Gpio_SetIO(GpioPortB, GpioPin13)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\st7565r.c line 25 : #define LCD_RS_LOW             Gpio_ClrIO(GpioPortB, GpioPin13)
---- GpioPortD Matches (18 in 4 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 26 : #define CELL_POLARITY_HIGH	         Gpio_SetIO(GpioPortD, GpioPin1)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 27 : #define CELL_POLARITY_LOW	         Gpio_ClrIO(GpioPortD, GpioPin1)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 29 : #define CELL_POLARITY2_HIGH	         Gpio_SetIO(GpioPortD, GpioPin0)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 30 : #define CELL_POLARITY2_LOW           Gpio_ClrIO(GpioPortD, GpioPin0)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 38 : #define CELL_POLARITY_HIGH	         Gpio_SetIO(GpioPortD, GpioPin0)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 39 : #define CELL_POLARITY_LOW	         Gpio_ClrIO(GpioPortD, GpioPin0)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 41 : #define CELL_POLARITY2_HIGH	         Gpio_SetIO(GpioPortD, GpioPin1)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 42 : #define CELL_POLARITY2_LOW           Gpio_ClrIO(GpioPortD, GpioPin1)
en_gpio_port line 88 :     GpioPortD = 0xc0u,                 ///< GPIO PORT D
Init_IOPorts line 367 : 	Gpio_ClrIO(GpioPortD, GpioPin0);
Init_IOPorts line 368 : 	Gpio_Init(GpioPortD, GpioPin0, &stcGpioCfg);	
Init_IOPorts line 369 : 	Gpio_ClrIO(GpioPortD, GpioPin1);
Init_IOPorts line 370 : 	Gpio_Init(GpioPortD, GpioPin1, &stcGpioCfg);	
MCUStopOutput line 695 : 	Gpio_ClrIO(GpioPortD, GpioPin0);
MCUStopOutput line 696 : 	Gpio_ClrIO(GpioPortD, GpioPin1);
Relay_set line 4 :      setBit(((uint32_t)&M0P_GPIO->PADIR + GpioPortD), GpioPin7, out?FALSE:TRUE);//输出
Relay_set line 5 :      setBit(((uint32_t)&M0P_GPIO->PAPU + GpioPortD), GpioPin7, out?FALSE:FALSE);
Relay_set line 6 :      setBit(((uint32_t)&M0P_GPIO->PAPD + GpioPortD), GpioPin7, out?FALSE:TRUE);
---- MCUStopOutput Matches (3 in 3 files) ----
ACPowerStatusProcess line 2605 : 				MCUStopOutput();
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\mcu.c line 689 : void MCUStopOutput(void)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\inc\mcu.h line 28 : extern void MCUStopOutput(void);
---- GpioPin13 Matches (40 in 4 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 22 : #define CURRENT_CTRL                 Gpio_ReadOutputIO(GpioPortC, GpioPin13)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 23 : #define CURRENT_CTRL_OFF              Gpio_SetIO(GpioPortC, GpioPin13)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 24 : #define CURRENT_CTRL_ON             Gpio_ClrIO(GpioPortC, GpioPin13)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 34 : #define CURRENT_CTRL                 Gpio_ReadOutputIO(GpioPortC, GpioPin13)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 35 : #define CURRENT_CTRL_ON            Gpio_SetIO(GpioPortC, GpioPin13)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 36 : #define CURRENT_CTRL_OFF             Gpio_ClrIO(GpioPortC, GpioPin13)
LEDControl line 519 : 				Gpio_SetIO(GpioPortB, GpioPin13);
LEDControl line 570 : 				Gpio_ClrIO(GpioPortB, GpioPin13);
LEDALLControl line 962 : 		Gpio_SetIO(GpioPortB, GpioPin13);
LEDALLControl line 983 : 		Gpio_ClrIO(GpioPortB, GpioPin13);
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 2582 : #define AC_POWER_DETECT   Gpio_GetInputIO(GpioPortB, GpioPin13)
en_gpio_pin line 110 :     GpioPin13 = 13u,                ///< GPIO PIN13
ALLStop line 74 : 	Gpio_SetIO(GpioPortC, GpioPin13);
ALLStart line 87 : 	Gpio_SetIO(GpioPortC, GpioPin13);
Gpio_IRQHandler line 152 :         if(TRUE == Gpio_GetIrqStatus(GpioPortB, GpioPin13))
Gpio_IRQHandler line 154 :             Gpio_ClearIrq(GpioPortB, GpioPin13);
Gpio_IRQHandler line 172 : 			Gpio_SetIO(GpioPortC, GpioPin13);
Tim3Int line 247 : 		if(Gpio_ReadOutputIO(GpioPortC, GpioPin13) == _HIGH)
Tim3Int line 250 : 			Gpio_ClrIO(GpioPortC, GpioPin13);
Tim3Int line 257 : 			Gpio_SetIO(GpioPortC, GpioPin13);
Init_IOPorts line 334 : 	Gpio_Init(GpioPortB, GpioPin13, &stcGpioCfg);   //AC POWER
Init_IOPorts line 335 :     Gpio_ClearIrq(GpioPortB, GpioPin13);
Init_IOPorts line 337 :     Gpio_EnableIrq(GpioPortB, GpioPin13, GpioIrqFalling);
Init_IOPorts line 358 : 	Gpio_ClrIO(GpioPortC, GpioPin13);
Init_IOPorts line 359 : 	Gpio_Init(GpioPortC, GpioPin13, &stcGpioCfg);	
Init_IOPorts line 360 : 	Gpio_SetIO(GpioPortC, GpioPin13);
Init_IOPorts line 362 : 	Gpio_SetIO(GpioPortC, GpioPin13);
Init_IOPorts line 363 : 	Gpio_Init(GpioPortC, GpioPin13, &stcGpioCfg);	
Init_IOPorts line 380 : 	Gpio_ClrIO(GpioPortB, GpioPin13);
Init_IOPorts line 398 : 	Gpio_Init(GpioPortB, GpioPin13, &stcGpioCfg);
Init_IOPorts line 417 :     Gpio_Init(GpioPortB, GpioPin13, &stcGpioCfg);   //RS
Init_IOPorts line 422 : 	Gpio_ClrIO(GpioPortB, GpioPin13);
Init_PWM line 616 : 	Gpio_ClrIO(GpioPortC, GpioPin13);
Init_PWM line 617 :     Gpio_Init(GpioPortC, GpioPin13, &stcTIM3Port);
Init_PWM line 618 :     Gpio_SetAfMode(GpioPortC,GpioPin13,GpioAf3);               //PC13设置为TIM3_CH1B	
MCUStopOutput line 694 : 	Gpio_ClrIO(GpioPortC, GpioPin13);
MCUStopOutput line 703 : 	Gpio_ClrIO(GpioPortB, GpioPin13);
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\st7565r.c line 19 : //#define CURRENT_CTRL                 Gpio_ReadOutputIO(GpioPortC, GpioPin13)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\st7565r.c line 24 : #define LCD_RS_HIGH            Gpio_SetIO(GpioPortB, GpioPin13)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\st7565r.c line 25 : #define LCD_RS_LOW             Gpio_ClrIO(GpioPortB, GpioPin13)
---- GpioPortC, GpioPin13 Matches (21 in 3 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 22 : #define CURRENT_CTRL                 Gpio_ReadOutputIO(GpioPortC, GpioPin13)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 23 : #define CURRENT_CTRL_OFF              Gpio_SetIO(GpioPortC, GpioPin13)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 24 : #define CURRENT_CTRL_ON             Gpio_ClrIO(GpioPortC, GpioPin13)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 34 : #define CURRENT_CTRL                 Gpio_ReadOutputIO(GpioPortC, GpioPin13)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 35 : #define CURRENT_CTRL_ON            Gpio_SetIO(GpioPortC, GpioPin13)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 36 : #define CURRENT_CTRL_OFF             Gpio_ClrIO(GpioPortC, GpioPin13)
ALLStop line 74 : 	Gpio_SetIO(GpioPortC, GpioPin13);
ALLStart line 87 : 	Gpio_SetIO(GpioPortC, GpioPin13);
Gpio_IRQHandler line 172 : 			Gpio_SetIO(GpioPortC, GpioPin13);
Tim3Int line 247 : 		if(Gpio_ReadOutputIO(GpioPortC, GpioPin13) == _HIGH)
Tim3Int line 250 : 			Gpio_ClrIO(GpioPortC, GpioPin13);
Tim3Int line 257 : 			Gpio_SetIO(GpioPortC, GpioPin13);
Init_IOPorts line 358 : 	Gpio_ClrIO(GpioPortC, GpioPin13);
Init_IOPorts line 359 : 	Gpio_Init(GpioPortC, GpioPin13, &stcGpioCfg);	
Init_IOPorts line 360 : 	Gpio_SetIO(GpioPortC, GpioPin13);
Init_IOPorts line 362 : 	Gpio_SetIO(GpioPortC, GpioPin13);
Init_IOPorts line 363 : 	Gpio_Init(GpioPortC, GpioPin13, &stcGpioCfg);	
Init_PWM line 616 : 	Gpio_ClrIO(GpioPortC, GpioPin13);
Init_PWM line 617 :     Gpio_Init(GpioPortC, GpioPin13, &stcTIM3Port);
MCUStopOutput line 694 : 	Gpio_ClrIO(GpioPortC, GpioPin13);
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\st7565r.c line 19 : //#define CURRENT_CTRL                 Gpio_ReadOutputIO(GpioPortC, GpioPin13)
---- GpioPortB Matches (84 in 4 files) ----
LEDControl line 508 : 				Gpio_SetIO(GpioPortB, GpioPin8);
LEDControl line 514 : 				Gpio_SetIO(GpioPortB, GpioPin7);
LEDControl line 519 : 				Gpio_SetIO(GpioPortB, GpioPin13);
LEDControl line 525 : 				Gpio_SetIO(GpioPortB, GpioPin9);
LEDControl line 528 : 				Gpio_SetIO(GpioPortB, GpioPin11);
LEDControl line 531 : 				Gpio_SetIO(GpioPortB, GpioPin10);
LEDControl line 534 : 				Gpio_SetIO(GpioPortB, GpioPin2);
LEDControl line 537 : 				Gpio_SetIO(GpioPortB, GpioPin1);
LEDControl line 540 : 				Gpio_SetIO(GpioPortB, GpioPin0);
LEDControl line 559 : 				Gpio_ClrIO(GpioPortB, GpioPin8);
LEDControl line 565 : 				Gpio_ClrIO(GpioPortB, GpioPin7);
LEDControl line 570 : 				Gpio_ClrIO(GpioPortB, GpioPin13);
LEDControl line 576 : 				Gpio_ClrIO(GpioPortB, GpioPin9);
LEDControl line 579 : 				Gpio_ClrIO(GpioPortB, GpioPin11);
LEDControl line 582 : 				Gpio_ClrIO(GpioPortB, GpioPin10);
LEDControl line 585 : 				Gpio_ClrIO(GpioPortB, GpioPin2);
LEDControl line 588 : 				Gpio_ClrIO(GpioPortB, GpioPin1);
LEDControl line 591 : 				Gpio_ClrIO(GpioPortB, GpioPin0);
LEDALLControl line 959 : 		Gpio_SetIO(GpioPortB, GpioPin8);
LEDALLControl line 962 : 		Gpio_SetIO(GpioPortB, GpioPin13);
LEDALLControl line 964 : 		Gpio_SetIO(GpioPortB, GpioPin7);
LEDALLControl line 967 : 		Gpio_SetIO(GpioPortB, GpioPin9);
LEDALLControl line 968 : 		Gpio_SetIO(GpioPortB, GpioPin11);
LEDALLControl line 969 : 		Gpio_SetIO(GpioPortB, GpioPin10);
LEDALLControl line 970 : 		Gpio_SetIO(GpioPortB, GpioPin2);
LEDALLControl line 971 : 		Gpio_SetIO(GpioPortB, GpioPin1);
LEDALLControl line 972 : 		Gpio_SetIO(GpioPortB, GpioPin0);
LEDALLControl line 980 : 		Gpio_ClrIO(GpioPortB, GpioPin8);
LEDALLControl line 983 : 		Gpio_ClrIO(GpioPortB, GpioPin13);
LEDALLControl line 985 : 		Gpio_ClrIO(GpioPortB, GpioPin7);
LEDALLControl line 988 : 		Gpio_ClrIO(GpioPortB, GpioPin9);
LEDALLControl line 989 : 		Gpio_ClrIO(GpioPortB, GpioPin11);
LEDALLControl line 990 : 		Gpio_ClrIO(GpioPortB, GpioPin10);
LEDALLControl line 991 : 		Gpio_ClrIO(GpioPortB, GpioPin2);
LEDALLControl line 992 : 		Gpio_ClrIO(GpioPortB, GpioPin1);
LEDALLControl line 993 : 		Gpio_ClrIO(GpioPortB, GpioPin0);
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 2582 : #define AC_POWER_DETECT   Gpio_GetInputIO(GpioPortB, GpioPin13)
en_gpio_port line 86 :     GpioPortB = 0x40u,                 ///< GPIO PORT B
Gpio_IRQHandler line 152 :         if(TRUE == Gpio_GetIrqStatus(GpioPortB, GpioPin13))
Gpio_IRQHandler line 154 :             Gpio_ClearIrq(GpioPortB, GpioPin13);
Tim3Int line 235 :             //Gpio_WriteOutputIO(GpioPortB, GpioPin0,TRUE);                       
Tim3Int line 242 :             //Gpio_WriteOutputIO(GpioPortB, GpioPin0,FALSE);                                                
Init_IOPorts line 334 : 	Gpio_Init(GpioPortB, GpioPin13, &stcGpioCfg);   //AC POWER
Init_IOPorts line 335 :     Gpio_ClearIrq(GpioPortB, GpioPin13);
Init_IOPorts line 337 :     Gpio_EnableIrq(GpioPortB, GpioPin13, GpioIrqFalling);
Init_IOPorts line 377 : 	Gpio_ClrIO(GpioPortB, GpioPin8);
Init_IOPorts line 380 : 	Gpio_ClrIO(GpioPortB, GpioPin13);
Init_IOPorts line 382 : 	Gpio_ClrIO(GpioPortB, GpioPin7);
Init_IOPorts line 385 : 	Gpio_ClrIO(GpioPortB, GpioPin9);
Init_IOPorts line 386 : 	Gpio_ClrIO(GpioPortB, GpioPin11);
Init_IOPorts line 387 : 	Gpio_ClrIO(GpioPortB, GpioPin10);
Init_IOPorts line 388 : 	Gpio_ClrIO(GpioPortB, GpioPin2);
Init_IOPorts line 389 : 	Gpio_ClrIO(GpioPortB, GpioPin1);
Init_IOPorts line 390 : 	Gpio_ClrIO(GpioPortB, GpioPin0);
Init_IOPorts line 395 : 	Gpio_Init(GpioPortB, GpioPin8, &stcGpioCfg);
Init_IOPorts line 398 : 	Gpio_Init(GpioPortB, GpioPin13, &stcGpioCfg);
Init_IOPorts line 400 :     Gpio_Init(GpioPortB, GpioPin7, &stcGpioCfg);
Init_IOPorts line 403 :     Gpio_Init(GpioPortB, GpioPin9, &stcGpioCfg);
Init_IOPorts line 404 : 	Gpio_Init(GpioPortB, GpioPin11, &stcGpioCfg);
Init_IOPorts line 405 :     Gpio_Init(GpioPortB, GpioPin10, &stcGpioCfg);
Init_IOPorts line 406 : 	Gpio_Init(GpioPortB, GpioPin2, &stcGpioCfg);
Init_IOPorts line 407 :     Gpio_Init(GpioPortB, GpioPin1, &stcGpioCfg);
Init_IOPorts line 408 : 	Gpio_Init(GpioPortB, GpioPin0, &stcGpioCfg);
Init_IOPorts line 416 : 	Gpio_Init(GpioPortB, GpioPin12, &stcGpioCfg);   //CS
Init_IOPorts line 417 :     Gpio_Init(GpioPortB, GpioPin13, &stcGpioCfg);   //RS
Init_IOPorts line 421 : 	Gpio_SetIO(GpioPortB, GpioPin12);          
Init_IOPorts line 422 : 	Gpio_ClrIO(GpioPortB, GpioPin13);
Init_ADC line 553 :     Gpio_SetAnalogMode(GpioPortB, GpioPin12);        //PB12 (AIN19)
Init_ADC line 555 :     Gpio_Init(GpioPortB, GpioPin12, &stcAdcAN0Port);
MCUStopOutput line 700 : 	Gpio_ClrIO(GpioPortB, GpioPin8);
MCUStopOutput line 703 : 	Gpio_ClrIO(GpioPortB, GpioPin13);
MCUStopOutput line 705 : 	Gpio_ClrIO(GpioPortB, GpioPin7);
MCUStopOutput line 708 : 	Gpio_ClrIO(GpioPortB, GpioPin9);
MCUStopOutput line 709 : 	Gpio_ClrIO(GpioPortB, GpioPin11);
MCUStopOutput line 710 : 	Gpio_ClrIO(GpioPortB, GpioPin10);
MCUStopOutput line 711 : 	Gpio_ClrIO(GpioPortB, GpioPin2);
MCUStopOutput line 712 : 	Gpio_ClrIO(GpioPortB, GpioPin1);
MCUStopOutput line 713 : 	Gpio_ClrIO(GpioPortB, GpioPin0);
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\st7565r.c line 20 : #define LCD_RST_HIGH           Gpio_SetIO(GpioPortA, GpioPin10)//Gpio_SetIO(GpioPortB, GpioPin15)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\st7565r.c line 21 : #define LCD_RST_LOW            Gpio_ClrIO(GpioPortA, GpioPin10)//Gpio_ClrIO(GpioPortB, GpioPin15)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\st7565r.c line 22 : #define LCD_CS_HIGH            Gpio_SetIO(GpioPortB, GpioPin12)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\st7565r.c line 23 : #define LCD_CS_LOW             Gpio_ClrIO(GpioPortB, GpioPin12)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\st7565r.c line 24 : #define LCD_RS_HIGH            Gpio_SetIO(GpioPortB, GpioPin13)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\st7565r.c line 25 : #define LCD_RS_LOW             Gpio_ClrIO(GpioPortB, GpioPin13)
---- GpioPortB, GpioPin12 Matches (6 in 2 files) ----
Init_IOPorts line 416 : 	Gpio_Init(GpioPortB, GpioPin12, &stcGpioCfg);   //CS
Init_IOPorts line 421 : 	Gpio_SetIO(GpioPortB, GpioPin12);          
Init_ADC line 553 :     Gpio_SetAnalogMode(GpioPortB, GpioPin12);        //PB12 (AIN19)
Init_ADC line 555 :     Gpio_Init(GpioPortB, GpioPin12, &stcAdcAN0Port);
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\st7565r.c line 22 : #define LCD_CS_HIGH            Gpio_SetIO(GpioPortB, GpioPin12)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\st7565r.c line 23 : #define LCD_CS_LOW             Gpio_ClrIO(GpioPortB, GpioPin12)
---- WATER_FLOW_CHECK Matches (11 in 2 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 45 : #if(WATER_FLOW_CHECK == _ENABLE)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 166 : #if(WATER_FLOW_CHECK == _ENABLE)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 210 : #if(WATER_FLOW_CHECK == _ENABLE)
CellRealCurrentDisplay line 1322 : 	#if(WATER_FLOW_CHECK == _ENABLE)
CellCurrentOutput line 1431 : #if(WATER_FLOW_CHECK == _ENABLE)	
CellOutputCalibration line 1496 : #if(WATER_FLOW_CHECK == _ENABLE)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 2257 : #if(WATER_FLOW_CHECK == _ENABLE)
ProcessHandler line 2692 : #if(WATER_FLOW_CHECK == _ENABLE)
ProcessHandler line 2738 : 		#if(WATER_FLOW_CHECK == _ENABLE)	 	
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\inc\global.h line 97 : #define WATER_FLOW_CHECK                         _ENABLE
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\inc\global.h line 134 : #define WATER_FLOW_CHECK                         _ENABLE //
---- JIE_DEBUG Matches (1 in 1 files) ----
WaterFlowFaultProcess line 2311 : 		ucWaterFlowStatus=0;//JIE_DEBUG
---- JIE_DEBUG Matches (1 in 1 files) ----
WaterFlowFaultProcess line 2311 : 		ucWaterFlowStatus=0;//JIE_DEBUG
---- _FORWARD Matches (9 in 2 files) ----
SaveCalValueByDirection line 454 : 	if(ucCellPolarity == _FORWARD)
DataRangeCheck line 677 : 	if(ucData[3] > _FORWARD)
CellPolarityReverse line 1393 : 	if(ucPol == _FORWARD)
CellPolarityReverse line 1397 : 		//Eeprom_WriteBytes(CELL_POLARITY_ADDR,_FORWARD);
CellPolarityReverse line 1398 : 		ucData[3] = _FORWARD;
ChlorBoostProcess line 2423 : 		if(ucCellPolarity ==_FORWARD)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\inc\global.h line 54 : #define _FORWARD                                 1
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\inc\global.h line 85 : #define DEFUALT_CELL_POLARITY                    _FORWARD
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\inc\global.h line 122 : #define DEFUALT_CELL_POLARITY                    _FORWARD
---- ucCellPolarity Matches (16 in 1 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 185 : unsigned char ucCellPolarity;
ReadCellPolarity line 365 : 	ucCellPolarity = Eeprom_ReadBytes(CELL_POLARITY_ADDR);
SaveCellPolarity line 417 : 	ucData[3] = ucCellPolarity;
SaveCalValueByDirection line 454 : 	if(ucCellPolarity == _FORWARD)
UpdateUserData line 799 : 	ucCellPolarity = ucData[3];
CellPolarityControl line 1362 : 	if(ucCellPolarity)//Forward
CellReverse line 1405 : 	if(ucCellPolarity)
CellReverse line 1406 : 		ucCellPolarity = 0;
CellReverse line 1408 : 		ucCellPolarity = 1;
CellReverseForPCBTest line 2205 : 		if(ucCellPolarity)
CellReverseForPCBTest line 2206 : 			ucCellPolarity = 0;
CellReverseForPCBTest line 2208 : 			ucCellPolarity = 1;	
ChlorBoostProcess line 2423 : 		if(ucCellPolarity ==_FORWARD)
BoostModeHandler line 2500 : 				if(ucCellPolarity == _REVERSE)
BoostModeHandler line 2520 : 				if(ucCellPolarity == _REVERSE)
BoostModeHandler line 2543 : 				if(ucCellPolarity == _REVERSE)
---- ReadCellPolarity Matches (2 in 1 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 363 : void ReadCellPolarity(void)
ProcessHandler line 2784 : 			ReadCellPolarity();
---- LED_11 Matches (22 in 1 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 98 : 	LED_11 =BIT10,
LEDControl line 504 : 			case LED_11:		//D1
LEDControl line 555 : 			case LED_11:		//D1
CellPolarityControl line 1371 : 		LEDFlashSetting(LED_11,_OFF);
CellPolarityControl line 1382 : 		LEDFlashSetting(LED_11,_ON);
CellPolarityControl line 1385 : 	LEDControl(LED_11,_ON);
CellOutputCurrentAdjust line 1657 : 			LEDControl(LED_11,_ON);
CellOutputCurrentAdjust line 1659 : 			LEDControl(LED_11,_OFF);
CellOutputCurrentAdjust line 1661 : 			LEDControl(LED_11,_ON);
CellOutputCurrentAdjust line 1663 : 			LEDControl(LED_11,_OFF);
CellOutputCurrentAdjust line 1665 : 			LEDControl(LED_11,_ON);
CellOutputCurrentAdjust line 1667 : 			LEDControl(LED_11,_OFF);
CellOutputCurrentAdjust line 1669 : 			LEDFlashSetting(LED_11,_ON);
SpecialSecretCodeProcess line 2374 : 			LEDFlashSetting(LED_12|LED_11,_ON);
ChlorBoostProcess line 2425 : 			LEDFlashSetting(LED_11,_OFF);
ChlorBoostProcess line 2426 : 			LEDControl(LED_11, _ON);
BoostModeHandler line 2499 : 				LEDControl(LED_11,_ON);
BoostModeHandler line 2501 : 				LEDFlashSetting(LED_11,_ON);
BoostModeHandler line 2519 : 				LEDControl(LED_11,_ON);
BoostModeHandler line 2521 : 				LEDFlashSetting(LED_11,_ON);
BoostModeHandler line 2542 : 				LEDControl(LED_11,_ON);
BoostModeHandler line 2544 : 				LEDFlashSetting(LED_11,_ON);
---- SaveCellPolarity Matches (1 in 1 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 415 : void SaveCellPolarity(void)
---- ucCellPolarity Matches (16 in 1 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 185 : unsigned char ucCellPolarity;
ReadCellPolarity line 365 : 	ucCellPolarity = Eeprom_ReadBytes(CELL_POLARITY_ADDR);
SaveCellPolarity line 417 : 	ucData[3] = ucCellPolarity;
SaveCalValueByDirection line 454 : 	if(ucCellPolarity == _FORWARD)
UpdateUserData line 799 : 	ucCellPolarity = ucData[3];
CellPolarityControl line 1362 : 	if(ucCellPolarity)//Forward
CellReverse line 1405 : 	if(ucCellPolarity)
CellReverse line 1406 : 		ucCellPolarity = 0;
CellReverse line 1408 : 		ucCellPolarity = 1;
CellReverseForPCBTest line 2205 : 		if(ucCellPolarity)
CellReverseForPCBTest line 2206 : 			ucCellPolarity = 0;
CellReverseForPCBTest line 2208 : 			ucCellPolarity = 1;	
ChlorBoostProcess line 2423 : 		if(ucCellPolarity ==_FORWARD)
BoostModeHandler line 2500 : 				if(ucCellPolarity == _REVERSE)
BoostModeHandler line 2520 : 				if(ucCellPolarity == _REVERSE)
BoostModeHandler line 2543 : 				if(ucCellPolarity == _REVERSE)
---- CellPolarityControl Matches (4 in 1 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 1350 : void CellPolarityControl(void)
CellReverse line 1410 : 	CellPolarityControl();
PowerOnInitialize line 2241 : 	CellPolarityControl();	
ProcessHandler line 2785 : 			CellPolarityControl();
---- _FORWARD Matches (9 in 2 files) ----
SaveCalValueByDirection line 454 : 	if(ucCellPolarity == _FORWARD)
DataRangeCheck line 677 : 	if(ucData[3] > _FORWARD)
CellPolarityReverse line 1393 : 	if(ucPol == _FORWARD)
CellPolarityReverse line 1397 : 		//Eeprom_WriteBytes(CELL_POLARITY_ADDR,_FORWARD);
CellPolarityReverse line 1398 : 		ucData[3] = _FORWARD;
ChlorBoostProcess line 2423 : 		if(ucCellPolarity ==_FORWARD)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\inc\global.h line 54 : #define _FORWARD                                 1
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\inc\global.h line 85 : #define DEFUALT_CELL_POLARITY                    _FORWARD
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\inc\global.h line 122 : #define DEFUALT_CELL_POLARITY                    _FORWARD
---- GpioPin0 Matches (23 in 4 files) ----
APP_UART_1MS_HANDLE line 966 : 		Gpio_SetIO(GpioPortD, GpioPin0);
APP_UART_1MS_HANDLE line 972 : 		Gpio_ClrIO(GpioPortD, GpioPin0);
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 29 : #define CELL_POLARITY2_HIGH	         Gpio_SetIO(GpioPortD, GpioPin0)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 30 : #define CELL_POLARITY2_LOW           Gpio_ClrIO(GpioPortD, GpioPin0)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 38 : //#define CELL_POLARITY_HIGH	         Gpio_SetIO(GpioPortD, GpioPin0)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 39 : //#define CELL_POLARITY_LOW	         Gpio_ClrIO(GpioPortD, GpioPin0)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 47 : #define WATER_FLOW_SENSOR            Gpio_GetInputIO(GpioPortA, GpioPin0)
LEDControl line 540 : 				Gpio_SetIO(GpioPortB, GpioPin0);
LEDControl line 591 : 				Gpio_ClrIO(GpioPortB, GpioPin0);
LEDALLControl line 972 : 		Gpio_SetIO(GpioPortB, GpioPin0);
LEDALLControl line 993 : 		Gpio_ClrIO(GpioPortB, GpioPin0);
en_gpio_pin line 97 :     GpioPin0  = 0u,                 ///< GPIO PIN0 
Tim3Int line 235 :             //Gpio_WriteOutputIO(GpioPortB, GpioPin0,TRUE);                       
Tim3Int line 242 :             //Gpio_WriteOutputIO(GpioPortB, GpioPin0,FALSE);                                                
Init_IOPorts line 317 :     Gpio_Init(GpioPortA, GpioPin0, &stcGpioCfg);   //Water Flow
Init_IOPorts line 367 : 	Gpio_ClrIO(GpioPortD, GpioPin0);
Init_IOPorts line 368 : 	Gpio_Init(GpioPortD, GpioPin0, &stcGpioCfg);	
Init_IOPorts line 390 : 	Gpio_ClrIO(GpioPortB, GpioPin0);
Init_IOPorts line 408 : 	Gpio_Init(GpioPortB, GpioPin0, &stcGpioCfg);
Init_ADC line 549 :     Gpio_SetAnalogMode(GpioPortA, GpioPin0);        //PA00 (AIN0)
Init_ADC line 551 :     Gpio_Init(GpioPortA, GpioPin0, &stcAdcAN0Port);
MCUStopOutput line 695 : 	Gpio_ClrIO(GpioPortD, GpioPin0);
MCUStopOutput line 713 : 	Gpio_ClrIO(GpioPortB, GpioPin0);
---- uiCurrentDuty Matches (17 in 1 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 266 : unsigned int uiCurrentDuty = PWM_MIN;
CellCurrentOutput line 1446 :     	uiCurrentDuty = PWM_MIN;
CellOutputCalibration line 1568 : 		if(uiCurrentDuty >= iTempSum)
CellOutputCalibration line 1570 : 			uiCurrentDuty -= ucStep;
CellOutputCalibration line 1571 : 			uiPWMHCnt = uiCurrentDuty;//uiPWMHCnt = uiCurrentDuty *10;
CellOutputCalibration line 1583 : 			uiCurrentDuty = PWM_MIN;
CellOutputCalibration line 1605 : 		iTempSum = uiCurrentDuty;
CellOutputCalibration line 1616 : 			uiCurrentDuty = iTempSum;
CellOutputCalibration line 1617 : 			uiPWMHCnt = uiCurrentDuty;//uiPWMHCnt = uiCurrentDuty *10;
CellOutputCalibration line 1622 : 			uiCurrentDuty = uiCurrentMaxDuty;
CellOutputCalibration line 1623 : 			uiPWMHCnt = uiCurrentDuty;//uiPWMHCnt = uiCurrentDuty *10;
ChlorBoostProcess line 2421 : 		uiCurrentDuty = uiPWMHCnt;
CheckWaterSaltLevel line 2640 : 	if((uiCurrentDuty >= uiCurrentMaxDuty)&&(uiCellRealCurrent < uiLowSaltCurrent)&&(bStopOutputFlag == _FALSE))
CellCurrentCycleOutput line 2680 : 			uiCurrentDuty = PWM_MIN;
---- _REVERSE Matches (6 in 2 files) ----
CellPolarityReverse line 1394 : 		//Eeprom_WriteBytes(CELL_POLARITY_ADDR,_REVERSE);
CellPolarityReverse line 1395 : 		ucData[3] = _REVERSE;
BoostModeHandler line 2545 : 				if(ucCellPolarity == _REVERSE)
BoostModeHandler line 2565 : 				if(ucCellPolarity == _REVERSE)
BoostModeHandler line 2588 : 				if(ucCellPolarity == _REVERSE)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\inc\global.h line 55 : #define _REVERSE                                 0

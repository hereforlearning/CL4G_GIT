---- ucStableCnt Matches (8 in 1 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 203 : unsigned char ucStableCnt;
GetCellRealCurrent line 1175 : 		ucStableCnt = 0;
GetCellRealCurrent line 1195 : 		ucStableCnt++;
GetCellRealCurrent line 1197 : 		if(ucStableCnt == ADC_STABLE_NUM)
GetCellRealCurrent line 1199 : 			ucStableCnt = 0;
GetCellRealCurrent line 1248 : 			ucStableCnt++;
GetCellRealCurrent line 1252 : 		if(ucStableCnt == ADC_STABLE_NUM)
GetCellRealCurrent line 1254 : 			ucStableCnt = 0;
---- bADCDoneFlag Matches (7 in 1 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 162 : unsigned char bADCDoneFlag       = _FALSE;
GetCellRealCurrent line 1187 : 	if(bADCDoneFlag)
GetCellRealCurrent line 1230 : 		bADCDoneFlag = _FALSE;
GetCellRealCurrent line 1234 : 	if(bADCDoneFlag)
GetCellRealCurrent line 1279 : 		bADCDoneFlag = _FALSE;
CurrentADCProcess line 2920 : 		if(bADCDoneFlag == _FALSE)
CurrentADCProcess line 2922 : 			bADCDoneFlag = _TRUE;
---- CurrentADCProcess Matches (3 in 3 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 2911 : void CurrentADCProcess(void)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\inc\ctrl.h line 32 : extern void CurrentADCProcess(void);
AdcContIrqCallback line 130 : 	CurrentADCProcess();	
---- ADCStart Matches (5 in 2 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\mcu.c line 92 : void ADCStart(void)
Gpio_IRQHandler line 182 : 			ADCStart();	
Tim1Int line 208 : 		ADCStart();
Tim3Int line 231 : 		ADCStart();	
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\inc\mcu.h line 20 : extern void ADCStart(void);
---- GpioPin12 Matches (19 in 4 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 2581 : #define AC_POWER_DETECT   Gpio_GetInputIO(GpioPortA, GpioPin12)
en_gpio_pin line 109 :     GpioPin12 = 12u,                ///< GPIO PIN12
PWMStop line 59 : 	Gpio_ClearIrq(GpioPortA, GpioPin12);
Gpio_IRQHandler line 142 :         if(TRUE == Gpio_GetIrqStatus(GpioPortA, GpioPin12))
Gpio_IRQHandler line 144 :             Gpio_ClearIrq(GpioPortA, GpioPin12);
Gpio_IRQHandler line 164 :         if(TRUE == Gpio_GetIrqStatus(GpioPortA, GpioPin12))
Gpio_IRQHandler line 166 :             Gpio_ClearIrq(GpioPortA, GpioPin12);
Init_IOPorts line 326 : 	Gpio_Init(GpioPortA, GpioPin12, &stcGpioCfg);   //AC POWER
Init_IOPorts line 328 :     Gpio_ClearIrq(GpioPortA, GpioPin12);
Init_IOPorts line 330 :     Gpio_EnableIrq(GpioPortA, GpioPin12, GpioIrqFalling);
Init_IOPorts line 342 :     Gpio_Init(GpioPortA, GpioPin12, &stcGpioCfg);  //Zero Cross Detect
Init_IOPorts line 343 :     Gpio_ClearIrq(GpioPortA, GpioPin12);
Init_IOPorts line 345 :     Gpio_EnableIrq(GpioPortA, GpioPin12, GpioIrqFalling);
Init_IOPorts line 416 : 	Gpio_Init(GpioPortB, GpioPin12, &stcGpioCfg);   //CS
Init_IOPorts line 421 : 	Gpio_SetIO(GpioPortB, GpioPin12);          
Init_ADC line 553 :     Gpio_SetAnalogMode(GpioPortB, GpioPin12);        //PB12 (AIN19)
Init_ADC line 555 :     Gpio_Init(GpioPortB, GpioPin12, &stcAdcAN0Port);
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\st7565r.c line 22 : #define LCD_CS_HIGH            Gpio_SetIO(GpioPortB, GpioPin12)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\st7565r.c line 23 : #define LCD_CS_LOW             Gpio_ClrIO(GpioPortB, GpioPin12)
---- uiCellRealCurrent Matches (16 in 1 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 243 : unsigned int  uiCellRealCurrent = 0;
GetCellRealCurrent line 1180 : 		uiCellRealCurrent = 0;
GetCellRealCurrent line 1218 : 			uiCellRealCurrent = (uiTemp/10);	
GetCellRealCurrent line 1223 : 			uiCellRealCurrent=3;//JIE_DEBUG
GetCellRealCurrent line 1225 : 			uiCellRealCurrent = 0;
GetCellRealCurrent line 1269 : 			uiCellRealCurrent = (uiTemp/100);	
GetCellRealCurrent line 1275 : 			uiCellRealCurrent = 0;
CellRealCurrentDisplay line 1300 : 		//LEDDisplayHexValue(uiCellRealCurrent);
CellRealCurrentDisplay line 1315 : 			uiCellRealCurrent = 0;
CellRealCurrentDisplay line 1317 : 		iTemp = uiCellRealCurrent;
CellOutputCalibration line 1549 : 	if(uiCellRealCurrent>uiStdHigh)
CellOutputCalibration line 1552 : 		uiTol = uiCellRealCurrent - uiStdH;
CellOutputCalibration line 1594 : 	else if(uiCellRealCurrent<uiStdLow)
CellOutputCalibration line 1597 : 		uiTol = uiStdL - uiCellRealCurrent;
CheckCellCurrent line 2332 : 	if(uiCellRealCurrent<150)
CheckWaterSaltLevel line 2641 : 	if((uiCurrentDuty >= uiCurrentMaxDuty)&&(uiCellRealCurrent < uiLowSaltCurrent)&&(bStopOutputFlag == _FALSE))
---- uiCellRealCurrent Matches (16 in 1 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 243 : unsigned int  uiCellRealCurrent = 0;
GetCellRealCurrent line 1180 : 		uiCellRealCurrent = 0;
GetCellRealCurrent line 1218 : 			uiCellRealCurrent = (uiTemp/10);	
GetCellRealCurrent line 1223 : 			uiCellRealCurrent=3;//JIE_DEBUG
GetCellRealCurrent line 1225 : 			uiCellRealCurrent = 0;
GetCellRealCurrent line 1269 : 			uiCellRealCurrent = (uiTemp/100);	
GetCellRealCurrent line 1275 : 			uiCellRealCurrent = 0;
CellRealCurrentDisplay line 1300 : 		//LEDDisplayHexValue(uiCellRealCurrent);
CellRealCurrentDishttps://item.szlcsc.com/253992.htmlplay line 1315 : 			uiCellRealCurrent = 0;
CellRealCurrentDisplay line 1317 : 		iTemp = uiCellRealCurrent;
CellOutputCalibration line 1549 : 	if(uiCellRealCurrent>uiStdHigh)
CellOutputCalibration line 1552 : 		uiTol = uiCellRealCurrent - uiStdH;
CellOutputCalibration line 1594 : 	else if(uiCellRealCurrent<uiStdLow)
CellOutputCalibration line 1597 : 		uiTol = uiStdL - uiCellRealCurrent;
CheckCellCurrent line 2332 : 	if(uiCellRealCurrent<150)
CheckWaterSaltLevel line 2641 : 	if((uiCurrentDuty >= uiCurrentMaxDuty)&&(uiCellRealCurrent < uiLowSaltCurrent)&&(bStopOutputFlag == _FALSE))
---- GpioPin13 Matches (40 in 4 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 22 : #define CURRENT_CTRL                 Gpio_ReadOutputIO(GpioPortC, GpioPin13)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 23 : #define CURRENT_CTRL_OFF              Gpio_SetIO(GpioPortC, GpioPin13)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 24 : #define CURRENT_CTRL_ON             Gpio_ClrIO(GpioPortC, GpioPin13)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 34 : #define CURRENT_CTRL                 Gpio_ReadOutputIO(GpioPortC, GpioPin13)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 35 : #define CURRENT_CTRL_ON            Gpio_SetIO(GpioPortC, GpioPin13)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 36 : #define CURRENT_CTRL_OFF             Gpio_ClrIO(GpioPortC, GpioPin13)
LEDControl line 519 : 				Gpio_SetIO(GpioPortB, GpioPin13);
LEDControl line 570 : 				Gpio_ClrIO(GpioPortB, GpioPin13);
LEDALLControl line 962 : 		Gpio_SetIO(GpioPortB, GpioPin13);
LEDALLControl line 983 : 		Gpio_ClrIO(GpioPortB, GpioPin13);
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 2582 : #define AC_POWER_DETECT   Gpio_GetInputIO(GpioPortB, GpioPin13)
en_gpio_pin line 110 :     GpioPin13 = 13u,                ///< GPIO PIN13
ALLStop line 74 : 	Gpio_SetIO(GpioPortC, GpioPin13);
ALLStart line 87 : 	Gpio_SetIO(GpioPortC, GpioPin13);
Gpio_IRQHandler line 152 :         if(TRUE == Gpio_GetIrqStatus(GpioPortB, GpioPin13))
Gpio_IRQHandler line 154 :             Gpio_ClearIrq(GpioPortB, GpioPin13);
Gpio_IRQHandler line 172 : 			Gpio_SetIO(GpioPortC, GpioPin13);
Tim3Int line 247 : 		if(Gpio_ReadOutputIO(GpioPortC, GpioPin13) == _HIGH)
Tim3Int line 250 : 			Gpio_ClrIO(GpioPortC, GpioPin13);
Tim3Int line 257 : 			Gpio_SetIO(GpioPortC, GpioPin13);
Init_IOPorts line 334 : 	Gpio_Init(GpioPortB, GpioPin13, &stcGpioCfg);   //AC POWER
Init_IOPorts line 335 :     Gpio_ClearIrq(GpioPortB, GpioPin13);
Init_IOPorts line 337 :     Gpio_EnableIrq(GpioPortB, GpioPin13, GpioIrqFalling);
Init_IOPorts line 358 : 	Gpio_ClrIO(GpioPortC, GpioPin13);
Init_IOPorts line 359 : 	Gpio_Init(GpioPortC, GpioPin13, &stcGpioCfg);	
Init_IOPorts line 360 : 	Gpio_SetIO(GpioPortC, GpioPin13);
Init_IOPorts line 362 : 	Gpio_SetIO(GpioPortC, GpioPin13);
Init_IOPorts line 363 : 	Gpio_Init(GpioPortC, GpioPin13, &stcGpioCfg);	
Init_IOPorts line 380 : 	Gpio_ClrIO(GpioPortB, GpioPin13);
Init_IOPorts line 398 : 	Gpio_Init(GpioPortB, GpioPin13, &stcGpioCfg);
Init_IOPorts line 417 :     Gpio_Init(GpioPortB, GpioPin13, &stcGpioCfg);   //RS
Init_IOPorts line 422 : 	Gpio_ClrIO(GpioPortB, GpioPin13);
Init_PWM line 616 : 	Gpio_ClrIO(GpioPortC, GpioPin13);
Init_PWM line 617 :     Gpio_Init(GpioPortC, GpioPin13, &stcTIM3Port);
Init_PWM line 618 :     Gpio_SetAfMode(GpioPortC,GpioPin13,GpioAf3);               //PC13设置为TIM3_CH1B	
MCUStopOutput line 694 : 	Gpio_ClrIO(GpioPortC, GpioPin13);
MCUStopOutput line 703 : 	Gpio_ClrIO(GpioPortB, GpioPin13);
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\st7565r.c line 19 : //#define CURRENT_CTRL                 Gpio_ReadOutputIO(GpioPortC, GpioPin13)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\st7565r.c line 24 : #define LCD_RS_HIGH            Gpio_SetIO(GpioPortB, GpioPin13)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\st7565r.c line 25 : #define LCD_RS_LOW             Gpio_ClrIO(GpioPortB, GpioPin13)
---- GpioPortD Matches (18 in 4 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 26 : #define CELL_POLARITY_HIGH	         Gpio_SetIO(GpioPortD, GpioPin1)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 27 : #define CELL_POLARITY_LOW	         Gpio_ClrIO(GpioPortD, GpioPin1)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 29 : #define CELL_POLARITY2_HIGH	         Gpio_SetIO(GpioPortD, GpioPin0)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 30 : #define CELL_POLARITY2_LOW           Gpio_ClrIO(GpioPortD, GpioPin0)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 38 : #define CELL_POLARITY_HIGH	         Gpio_SetIO(GpioPortD, GpioPin0)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 39 : #define CELL_POLARITY_LOW	         Gpio_ClrIO(GpioPortD, GpioPin0)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 41 : #define CELL_POLARITY2_HIGH	         Gpio_SetIO(GpioPortD, GpioPin1)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 42 : #define CELL_POLARITY2_LOW           Gpio_ClrIO(GpioPortD, GpioPin1)
en_gpio_port line 88 :     GpioPortD = 0xc0u,                 ///< GPIO PORT D
Init_IOPorts line 367 : 	Gpio_ClrIO(GpioPortD, GpioPin0);
Init_IOPorts line 368 : 	Gpio_Init(GpioPortD, GpioPin0, &stcGpioCfg);	
Init_IOPorts line 369 : 	Gpio_ClrIO(GpioPortD, GpioPin1);
Init_IOPorts line 370 : 	Gpio_Init(GpioPortD, GpioPin1, &stcGpioCfg);	
MCUStopOutput line 695 : 	Gpio_ClrIO(GpioPortD, GpioPin0);
MCUStopOutput line 696 : 	Gpio_ClrIO(GpioPortD, GpioPin1);
Relay_set line 4 :      setBit(((uint32_t)&M0P_GPIO->PADIR + GpioPortD), GpioPin7, out?FALSE:TRUE);//输出
Relay_set line 5 :      setBit(((uint32_t)&M0P_GPIO->PAPU + GpioPortD), GpioPin7, out?FALSE:FALSE);
Relay_set line 6 :      setBit(((uint32_t)&M0P_GPIO->PAPD + GpioPortD), GpioPin7, out?FALSE:TRUE);
---- MCUStopOutput Matches (3 in 3 files) ----
ACPowerStatusProcess line 2605 : 				MCUStopOutput();
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\mcu.c line 689 : void MCUStopOutput(void)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\inc\mcu.h line 28 : extern void MCUStopOutput(void);
---- GpioPin13 Matches (40 in 4 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 22 : #define CURRENT_CTRL                 Gpio_ReadOutputIO(GpioPortC, GpioPin13)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 23 : #define CURRENT_CTRL_OFF              Gpio_SetIO(GpioPortC, GpioPin13)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 24 : #define CURRENT_CTRL_ON             Gpio_ClrIO(GpioPortC, GpioPin13)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 34 : #define CURRENT_CTRL                 Gpio_ReadOutputIO(GpioPortC, GpioPin13)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 35 : #define CURRENT_CTRL_ON            Gpio_SetIO(GpioPortC, GpioPin13)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 36 : #define CURRENT_CTRL_OFF             Gpio_ClrIO(GpioPortC, GpioPin13)
LEDControl line 519 : 				Gpio_SetIO(GpioPortB, GpioPin13);
LEDControl line 570 : 				Gpio_ClrIO(GpioPortB, GpioPin13);
LEDALLControl line 962 : 		Gpio_SetIO(GpioPortB, GpioPin13);
LEDALLControl line 983 : 		Gpio_ClrIO(GpioPortB, GpioPin13);
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 2582 : #define AC_POWER_DETECT   Gpio_GetInputIO(GpioPortB, GpioPin13)
en_gpio_pin line 110 :     GpioPin13 = 13u,                ///< GPIO PIN13
ALLStop line 74 : 	Gpio_SetIO(GpioPortC, GpioPin13);
ALLStart line 87 : 	Gpio_SetIO(GpioPortC, GpioPin13);
Gpio_IRQHandler line 152 :         if(TRUE == Gpio_GetIrqStatus(GpioPortB, GpioPin13))
Gpio_IRQHandler line 154 :             Gpio_ClearIrq(GpioPortB, GpioPin13);
Gpio_IRQHandler line 172 : 			Gpio_SetIO(GpioPortC, GpioPin13);
Tim3Int line 247 : 		if(Gpio_ReadOutputIO(GpioPortC, GpioPin13) == _HIGH)
Tim3Int line 250 : 			Gpio_ClrIO(GpioPortC, GpioPin13);
Tim3Int line 257 : 			Gpio_SetIO(GpioPortC, GpioPin13);
Init_IOPorts line 334 : 	Gpio_Init(GpioPortB, GpioPin13, &stcGpioCfg);   //AC POWER
Init_IOPorts line 335 :     Gpio_ClearIrq(GpioPortB, GpioPin13);
Init_IOPorts line 337 :     Gpio_EnableIrq(GpioPortB, GpioPin13, GpioIrqFalling);
Init_IOPorts line 358 : 	Gpio_ClrIO(GpioPortC, GpioPin13);
Init_IOPorts line 359 : 	Gpio_Init(GpioPortC, GpioPin13, &stcGpioCfg);	
Init_IOPorts line 360 : 	Gpio_SetIO(GpioPortC, GpioPin13);
Init_IOPorts line 362 : 	Gpio_SetIO(GpioPortC, GpioPin13);
Init_IOPorts line 363 : 	Gpio_Init(GpioPortC, GpioPin13, &stcGpioCfg);	
Init_IOPorts line 380 : 	Gpio_ClrIO(GpioPortB, GpioPin13);
Init_IOPorts line 398 : 	Gpio_Init(GpioPortB, GpioPin13, &stcGpioCfg);
Init_IOPorts line 417 :     Gpio_Init(GpioPortB, GpioPin13, &stcGpioCfg);   //RS
Init_IOPorts line 422 : 	Gpio_ClrIO(GpioPortB, GpioPin13);
Init_PWM line 616 : 	Gpio_ClrIO(GpioPortC, GpioPin13);
Init_PWM line 617 :     Gpio_Init(GpioPortC, GpioPin13, &stcTIM3Port);
Init_PWM line 618 :     Gpio_SetAfMode(GpioPortC,GpioPin13,GpioAf3);               //PC13设置为TIM3_CH1B	
MCUStopOutput line 694 : 	Gpio_ClrIO(GpioPortC, GpioPin13);
MCUStopOutput line 703 : 	Gpio_ClrIO(GpioPortB, GpioPin13);
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\st7565r.c line 19 : //#define CURRENT_CTRL                 Gpio_ReadOutputIO(GpioPortC, GpioPin13)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\st7565r.c line 24 : #define LCD_RS_HIGH            Gpio_SetIO(GpioPortB, GpioPin13)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\st7565r.c line 25 : #define LCD_RS_LOW             Gpio_ClrIO(GpioPortB, GpioPin13)
---- GpioPortC, GpioPin13 Matches (21 in 3 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 22 : #define CURRENT_CTRL                 Gpio_ReadOutputIO(GpioPortC, GpioPin13)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 23 : #define CURRENT_CTRL_OFF              Gpio_SetIO(GpioPortC, GpioPin13)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 24 : #define CURRENT_CTRL_ON             Gpio_ClrIO(GpioPortC, GpioPin13)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 34 : #define CURRENT_CTRL                 Gpio_ReadOutputIO(GpioPortC, GpioPin13)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 35 : #define CURRENT_CTRL_ON            Gpio_SetIO(GpioPortC, GpioPin13)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 36 : #define CURRENT_CTRL_OFF             Gpio_ClrIO(GpioPortC, GpioPin13)
ALLStop line 74 : 	Gpio_SetIO(GpioPortC, GpioPin13);
ALLStart line 87 : 	Gpio_SetIO(GpioPortC, GpioPin13);
Gpio_IRQHandler line 172 : 			Gpio_SetIO(GpioPortC, GpioPin13);
Tim3Int line 247 : 		if(Gpio_ReadOutputIO(GpioPortC, GpioPin13) == _HIGH)
Tim3Int line 250 : 			Gpio_ClrIO(GpioPortC, GpioPin13);
Tim3Int line 257 : 			Gpio_SetIO(GpioPortC, GpioPin13);
Init_IOPorts line 358 : 	Gpio_ClrIO(GpioPortC, GpioPin13);
Init_IOPorts line 359 : 	Gpio_Init(GpioPortC, GpioPin13, &stcGpioCfg);	
Init_IOPorts line 360 : 	Gpio_SetIO(GpioPortC, GpioPin13);
Init_IOPorts line 362 : 	Gpio_SetIO(GpioPortC, GpioPin13);
Init_IOPorts line 363 : 	Gpio_Init(GpioPortC, GpioPin13, &stcGpioCfg);	
Init_PWM line 616 : 	Gpio_ClrIO(GpioPortC, GpioPin13);
Init_PWM line 617 :     Gpio_Init(GpioPortC, GpioPin13, &stcTIM3Port);
MCUStopOutput line 694 : 	Gpio_ClrIO(GpioPortC, GpioPin13);
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\st7565r.c line 19 : //#define CURRENT_CTRL                 Gpio_ReadOutputIO(GpioPortC, GpioPin13)
---- GpioPortB Matches (84 in 4 files) ----
LEDControl line 508 : 				Gpio_SetIO(GpioPortB, GpioPin8);
LEDControl line 514 : 				Gpio_SetIO(GpioPortB, GpioPin7);
LEDControl line 519 : 				Gpio_SetIO(GpioPortB, GpioPin13);
LEDControl line 525 : 				Gpio_SetIO(GpioPortB, GpioPin9);
LEDControl line 528 : 				Gpio_SetIO(GpioPortB, GpioPin11);
LEDControl line 531 : 				Gpio_SetIO(GpioPortB, GpioPin10);
LEDControl line 534 : 				Gpio_SetIO(GpioPortB, GpioPin2);
LEDControl line 537 : 				Gpio_SetIO(GpioPortB, GpioPin1);
LEDControl line 540 : 				Gpio_SetIO(GpioPortB, GpioPin0);
LEDControl line 559 : 				Gpio_ClrIO(GpioPortB, GpioPin8);
LEDControl line 565 : 				Gpio_ClrIO(GpioPortB, GpioPin7);
LEDControl line 570 : 				Gpio_ClrIO(GpioPortB, GpioPin13);
LEDControl line 576 : 				Gpio_ClrIO(GpioPortB, GpioPin9);
LEDControl line 579 : 				Gpio_ClrIO(GpioPortB, GpioPin11);
LEDControl line 582 : 				Gpio_ClrIO(GpioPortB, GpioPin10);
LEDControl line 585 : 				Gpio_ClrIO(GpioPortB, GpioPin2);
LEDControl line 588 : 				Gpio_ClrIO(GpioPortB, GpioPin1);
LEDControl line 591 : 				Gpio_ClrIO(GpioPortB, GpioPin0);
LEDALLControl line 959 : 		Gpio_SetIO(GpioPortB, GpioPin8);
LEDALLControl line 962 : 		Gpio_SetIO(GpioPortB, GpioPin13);
LEDALLControl line 964 : 		Gpio_SetIO(GpioPortB, GpioPin7);
LEDALLControl line 967 : 		Gpio_SetIO(GpioPortB, GpioPin9);
LEDALLControl line 968 : 		Gpio_SetIO(GpioPortB, GpioPin11);
LEDALLControl line 969 : 		Gpio_SetIO(GpioPortB, GpioPin10);
LEDALLControl line 970 : 		Gpio_SetIO(GpioPortB, GpioPin2);
LEDALLControl line 971 : 		Gpio_SetIO(GpioPortB, GpioPin1);
LEDALLControl line 972 : 		Gpio_SetIO(GpioPortB, GpioPin0);
LEDALLControl line 980 : 		Gpio_ClrIO(GpioPortB, GpioPin8);
LEDALLControl line 983 : 		Gpio_ClrIO(GpioPortB, GpioPin13);
LEDALLControl line 985 : 		Gpio_ClrIO(GpioPortB, GpioPin7);
LEDALLControl line 988 : 		Gpio_ClrIO(GpioPortB, GpioPin9);
LEDALLControl line 989 : 		Gpio_ClrIO(GpioPortB, GpioPin11);
LEDALLControl line 990 : 		Gpio_ClrIO(GpioPortB, GpioPin10);
LEDALLControl line 991 : 		Gpio_ClrIO(GpioPortB, GpioPin2);
LEDALLControl line 992 : 		Gpio_ClrIO(GpioPortB, GpioPin1);
LEDALLControl line 993 : 		Gpio_ClrIO(GpioPortB, GpioPin0);
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 2582 : #define AC_POWER_DETECT   Gpio_GetInputIO(GpioPortB, GpioPin13)
en_gpio_port line 86 :     GpioPortB = 0x40u,                 ///< GPIO PORT B
Gpio_IRQHandler line 152 :         if(TRUE == Gpio_GetIrqStatus(GpioPortB, GpioPin13))
Gpio_IRQHandler line 154 :             Gpio_ClearIrq(GpioPortB, GpioPin13);
Tim3Int line 235 :             //Gpio_WriteOutputIO(GpioPortB, GpioPin0,TRUE);                       
Tim3Int line 242 :             //Gpio_WriteOutputIO(GpioPortB, GpioPin0,FALSE);                                                
Init_IOPorts line 334 : 	Gpio_Init(GpioPortB, GpioPin13, &stcGpioCfg);   //AC POWER
Init_IOPorts line 335 :     Gpio_ClearIrq(GpioPortB, GpioPin13);
Init_IOPorts line 337 :     Gpio_EnableIrq(GpioPortB, GpioPin13, GpioIrqFalling);
Init_IOPorts line 377 : 	Gpio_ClrIO(GpioPortB, GpioPin8);
Init_IOPorts line 380 : 	Gpio_ClrIO(GpioPortB, GpioPin13);
Init_IOPorts line 382 : 	Gpio_ClrIO(GpioPortB, GpioPin7);
Init_IOPorts line 385 : 	Gpio_ClrIO(GpioPortB, GpioPin9);
Init_IOPorts line 386 : 	Gpio_ClrIO(GpioPortB, GpioPin11);
Init_IOPorts line 387 : 	Gpio_ClrIO(GpioPortB, GpioPin10);
Init_IOPorts line 388 : 	Gpio_ClrIO(GpioPortB, GpioPin2);
Init_IOPorts line 389 : 	Gpio_ClrIO(GpioPortB, GpioPin1);
Init_IOPorts line 390 : 	Gpio_ClrIO(GpioPortB, GpioPin0);
Init_IOPorts line 395 : 	Gpio_Init(GpioPortB, GpioPin8, &stcGpioCfg);
Init_IOPorts line 398 : 	Gpio_Init(GpioPortB, GpioPin13, &stcGpioCfg);
Init_IOPorts line 400 :     Gpio_Init(GpioPortB, GpioPin7, &stcGpioCfg);
Init_IOPorts line 403 :     Gpio_Init(GpioPortB, GpioPin9, &stcGpioCfg);
Init_IOPorts line 404 : 	Gpio_Init(GpioPortB, GpioPin11, &stcGpioCfg);
Init_IOPorts line 405 :     Gpio_Init(GpioPortB, GpioPin10, &stcGpioCfg);
Init_IOPorts line 406 : 	Gpio_Init(GpioPortB, GpioPin2, &stcGpioCfg);
Init_IOPorts line 407 :     Gpio_Init(GpioPortB, GpioPin1, &stcGpioCfg);
Init_IOPorts line 408 : 	Gpio_Init(GpioPortB, GpioPin0, &stcGpioCfg);
Init_IOPorts line 416 : 	Gpio_Init(GpioPortB, GpioPin12, &stcGpioCfg);   //CS
Init_IOPorts line 417 :     Gpio_Init(GpioPortB, GpioPin13, &stcGpioCfg);   //RS
Init_IOPorts line 421 : 	Gpio_SetIO(GpioPortB, GpioPin12);          
Init_IOPorts line 422 : 	Gpio_ClrIO(GpioPortB, GpioPin13);
Init_ADC line 553 :     Gpio_SetAnalogMode(GpioPortB, GpioPin12);        //PB12 (AIN19)
Init_ADC line 555 :     Gpio_Init(GpioPortB, GpioPin12, &stcAdcAN0Port);
MCUStopOutput line 700 : 	Gpio_ClrIO(GpioPortB, GpioPin8);
MCUStopOutput line 703 : 	Gpio_ClrIO(GpioPortB, GpioPin13);
MCUStopOutput line 705 : 	Gpio_ClrIO(GpioPortB, GpioPin7);
MCUStopOutput line 708 : 	Gpio_ClrIO(GpioPortB, GpioPin9);
MCUStopOutput line 709 : 	Gpio_ClrIO(GpioPortB, GpioPin11);
MCUStopOutput line 710 : 	Gpio_ClrIO(GpioPortB, GpioPin10);
MCUStopOutput line 711 : 	Gpio_ClrIO(GpioPortB, GpioPin2);
MCUStopOutput line 712 : 	Gpio_ClrIO(GpioPortB, GpioPin1);
MCUStopOutput line 713 : 	Gpio_ClrIO(GpioPortB, GpioPin0);
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\st7565r.c line 20 : #define LCD_RST_HIGH           Gpio_SetIO(GpioPortA, GpioPin10)//Gpio_SetIO(GpioPortB, GpioPin15)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\st7565r.c line 21 : #define LCD_RST_LOW            Gpio_ClrIO(GpioPortA, GpioPin10)//Gpio_ClrIO(GpioPortB, GpioPin15)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\st7565r.c line 22 : #define LCD_CS_HIGH            Gpio_SetIO(GpioPortB, GpioPin12)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\st7565r.c line 23 : #define LCD_CS_LOW             Gpio_ClrIO(GpioPortB, GpioPin12)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\st7565r.c line 24 : #define LCD_RS_HIGH            Gpio_SetIO(GpioPortB, GpioPin13)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\st7565r.c line 25 : #define LCD_RS_LOW             Gpio_ClrIO(GpioPortB, GpioPin13)
---- GpioPortB, GpioPin12 Matches (6 in 2 files) ----
Init_IOPorts line 416 : 	Gpio_Init(GpioPortB, GpioPin12, &stcGpioCfg);   //CS
Init_IOPorts line 421 : 	Gpio_SetIO(GpioPortB, GpioPin12);          
Init_ADC line 553 :     Gpio_SetAnalogMode(GpioPortB, GpioPin12);        //PB12 (AIN19)
Init_ADC line 555 :     Gpio_Init(GpioPortB, GpioPin12, &stcAdcAN0Port);
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\st7565r.c line 22 : #define LCD_CS_HIGH            Gpio_SetIO(GpioPortB, GpioPin12)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\st7565r.c line 23 : #define LCD_CS_LOW             Gpio_ClrIO(GpioPortB, GpioPin12)
---- WATER_FLOW_CHECK Matches (11 in 2 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 45 : #if(WATER_FLOW_CHECK == _ENABLE)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 166 : #if(WATER_FLOW_CHECK == _ENABLE)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 210 : #if(WATER_FLOW_CHECK == _ENABLE)
CellRealCurrentDisplay line 1322 : 	#if(WATER_FLOW_CHECK == _ENABLE)
CellCurrentOutput line 1431 : #if(WATER_FLOW_CHECK == _ENABLE)	
CellOutputCalibration line 1496 : #if(WATER_FLOW_CHECK == _ENABLE)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 2257 : #if(WATER_FLOW_CHECK == _ENABLE)
ProcessHandler line 2692 : #if(WATER_FLOW_CHECK == _ENABLE)
ProcessHandler line 2738 : 		#if(WATER_FLOW_CHECK == _ENABLE)	 	
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\inc\global.h line 97 : #define WATER_FLOW_CHECK                         _ENABLE
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\inc\global.h line 134 : #define WATER_FLOW_CHECK                         _ENABLE //
---- JIE_DEBUG Matches (1 in 1 files) ----
WaterFlowFaultProcess line 2311 : 		ucWaterFlowStatus=0;//JIE_DEBUG
---- JIE_DEBUG Matches (1 in 1 files) ----
WaterFlowFaultProcess line 2311 : 		ucWaterFlowStatus=0;//JIE_DEBUG
---- _FORWARD Matches (9 in 2 files) ----
SaveCalValueByDirection line 454 : 	if(ucCellPolarity == _FORWARD)
DataRangeCheck line 677 : 	if(ucData[3] > _FORWARD)
CellPolarityReverse line 1393 : 	if(ucPol == _FORWARD)
CellPolarityReverse line 1397 : 		//Eeprom_WriteBytes(CELL_POLARITY_ADDR,_FORWARD);
CellPolarityReverse line 1398 : 		ucData[3] = _FORWARD;
ChlorBoostProcess line 2423 : 		if(ucCellPolarity ==_FORWARD)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\inc\global.h line 54 : #define _FORWARD                                 1
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\inc\global.h line 85 : #define DEFUALT_CELL_POLARITY                    _FORWARD
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\inc\global.h line 122 : #define DEFUALT_CELL_POLARITY                    _FORWARD
---- ucCellPolarity Matches (16 in 1 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 185 : unsigned char ucCellPolarity;
ReadCellPolarity line 365 : 	ucCellPolarity = Eeprom_ReadBytes(CELL_POLARITY_ADDR);
SaveCellPolarity line 417 : 	ucData[3] = ucCellPolarity;
SaveCalValueByDirection line 454 : 	if(ucCellPolarity == _FORWARD)
UpdateUserData line 799 : 	ucCellPolarity = ucData[3];
CellPolarityControl line 1362 : 	if(ucCellPolarity)//Forward
CellReverse line 1405 : 	if(ucCellPolarity)
CellReverse line 1406 : 		ucCellPolarity = 0;
CellReverse line 1408 : 		ucCellPolarity = 1;
CellReverseForPCBTest line 2205 : 		if(ucCellPolarity)
CellReverseForPCBTest line 2206 : 			ucCellPolarity = 0;
CellReverseForPCBTest line 2208 : 			ucCellPolarity = 1;	
ChlorBoostProcess line 2423 : 		if(ucCellPolarity ==_FORWARD)
BoostModeHandler line 2500 : 				if(ucCellPolarity == _REVERSE)
BoostModeHandler line 2520 : 				if(ucCellPolarity == _REVERSE)
BoostModeHandler line 2543 : 				if(ucCellPolarity == _REVERSE)
---- ReadCellPolarity Matches (2 in 1 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 363 : void ReadCellPolarity(void)
ProcessHandler line 2784 : 			ReadCellPolarity();
---- LED_11 Matches (22 in 1 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 98 : 	LED_11 =BIT10,
LEDControl line 504 : 			case LED_11:		//D1
LEDControl line 555 : 			case LED_11:		//D1
CellPolarityControl line 1371 : 		LEDFlashSetting(LED_11,_OFF);
CellPolarityControl line 1382 : 		LEDFlashSetting(LED_11,_ON);
CellPolarityControl line 1385 : 	LEDControl(LED_11,_ON);
CellOutputCurrentAdjust line 1657 : 			LEDControl(LED_11,_ON);
CellOutputCurrentAdjust line 1659 : 			LEDControl(LED_11,_OFF);
CellOutputCurrentAdjust line 1661 : 			LEDControl(LED_11,_ON);
CellOutputCurrentAdjust line 1663 : 			LEDControl(LED_11,_OFF);
CellOutputCurrentAdjust line 1665 : 			LEDControl(LED_11,_ON);
CellOutputCurrentAdjust line 1667 : 			LEDControl(LED_11,_OFF);
CellOutputCurrentAdjust line 1669 : 			LEDFlashSetting(LED_11,_ON);
SpecialSecretCodeProcess line 2374 : 			LEDFlashSetting(LED_12|LED_11,_ON);
ChlorBoostProcess line 2425 : 			LEDFlashSetting(LED_11,_OFF);
ChlorBoostProcess line 2426 : 			LEDControl(LED_11, _ON);
BoostModeHandler line 2499 : 				LEDControl(LED_11,_ON);
BoostModeHandler line 2501 : 				LEDFlashSetting(LED_11,_ON);
BoostModeHandler line 2519 : 				LEDControl(LED_11,_ON);
BoostModeHandler line 2521 : 				LEDFlashSetting(LED_11,_ON);
BoostModeHandler line 2542 : 				LEDControl(LED_11,_ON);
BoostModeHandler line 2544 : 				LEDFlashSetting(LED_11,_ON);
---- SaveCellPolarity Matches (1 in 1 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 415 : void SaveCellPolarity(void)
---- ucCellPolarity Matches (16 in 1 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 185 : unsigned char ucCellPolarity;
ReadCellPolarity line 365 : 	ucCellPolarity = Eeprom_ReadBytes(CELL_POLARITY_ADDR);
SaveCellPolarity line 417 : 	ucData[3] = ucCellPolarity;
SaveCalValueByDirection line 454 : 	if(ucCellPolarity == _FORWARD)
UpdateUserData line 799 : 	ucCellPolarity = ucData[3];
CellPolarityControl line 1362 : 	if(ucCellPolarity)//Forward
CellReverse line 1405 : 	if(ucCellPolarity)
CellReverse line 1406 : 		ucCellPolarity = 0;
CellReverse line 1408 : 		ucCellPolarity = 1;
CellReverseForPCBTest line 2205 : 		if(ucCellPolarity)
CellReverseForPCBTest line 2206 : 			ucCellPolarity = 0;
CellReverseForPCBTest line 2208 : 			ucCellPolarity = 1;	
ChlorBoostProcess line 2423 : 		if(ucCellPolarity ==_FORWARD)
BoostModeHandler line 2500 : 				if(ucCellPolarity == _REVERSE)
BoostModeHandler line 2520 : 				if(ucCellPolarity == _REVERSE)
BoostModeHandler line 2543 : 				if(ucCellPolarity == _REVERSE)
---- CellPolarityControl Matches (4 in 1 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 1350 : void CellPolarityControl(void)
CellReverse line 1410 : 	CellPolarityControl();
PowerOnInitialize line 2241 : 	CellPolarityControl();	
ProcessHandler line 2785 : 			CellPolarityControl();
---- _FORWARD Matches (9 in 2 files) ----
SaveCalValueByDirection line 454 : 	if(ucCellPolarity == _FORWARD)
DataRangeCheck line 677 : 	if(ucData[3] > _FORWARD)
CellPolarityReverse line 1393 : 	if(ucPol == _FORWARD)
CellPolarityReverse line 1397 : 		//Eeprom_WriteBytes(CELL_POLARITY_ADDR,_FORWARD);
CellPolarityReverse line 1398 : 		ucData[3] = _FORWARD;
ChlorBoostProcess line 2423 : 		if(ucCellPolarity ==_FORWARD)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\inc\global.h line 54 : #define _FORWARD                                 1
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\inc\global.h line 85 : #define DEFUALT_CELL_POLARITY                    _FORWARD
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\inc\global.h line 122 : #define DEFUALT_CELL_POLARITY                    _FORWARD
---- GpioPin0 Matches (23 in 4 files) ----
APP_UART_1MS_HANDLE line 966 : 		Gpio_SetIO(GpioPortD, GpioPin0);
APP_UART_1MS_HANDLE line 972 : 		Gpio_ClrIO(GpioPortD, GpioPin0);
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 29 : #define CELL_POLARITY2_HIGH	         Gpio_SetIO(GpioPortD, GpioPin0)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 30 : #define CELL_POLARITY2_LOW           Gpio_ClrIO(GpioPortD, GpioPin0)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 38 : //#define CELL_POLARITY_HIGH	         Gpio_SetIO(GpioPortD, GpioPin0)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 39 : //#define CELL_POLARITY_LOW	         Gpio_ClrIO(GpioPortD, GpioPin0)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 47 : #define WATER_FLOW_SENSOR            Gpio_GetInputIO(GpioPortA, GpioPin0)
LEDControl line 540 : 				Gpio_SetIO(GpioPortB, GpioPin0);
LEDControl line 591 : 				Gpio_ClrIO(GpioPortB, GpioPin0);
LEDALLControl line 972 : 		Gpio_SetIO(GpioPortB, GpioPin0);
LEDALLControl line 993 : 		Gpio_ClrIO(GpioPortB, GpioPin0);
en_gpio_pin line 97 :     GpioPin0  = 0u,                 ///< GPIO PIN0 
Tim3Int line 235 :             //Gpio_WriteOutputIO(GpioPortB, GpioPin0,TRUE);                       
Tim3Int line 242 :             //Gpio_WriteOutputIO(GpioPortB, GpioPin0,FALSE);                                                
Init_IOPorts line 317 :     Gpio_Init(GpioPortA, GpioPin0, &stcGpioCfg);   //Water Flow
Init_IOPorts line 367 : 	Gpio_ClrIO(GpioPortD, GpioPin0);
Init_IOPorts line 368 : 	Gpio_Init(GpioPortD, GpioPin0, &stcGpioCfg);	
Init_IOPorts line 390 : 	Gpio_ClrIO(GpioPortB, GpioPin0);
Init_IOPorts line 408 : 	Gpio_Init(GpioPortB, GpioPin0, &stcGpioCfg);
Init_ADC line 549 :     Gpio_SetAnalogMode(GpioPortA, GpioPin0);        //PA00 (AIN0)
Init_ADC line 551 :     Gpio_Init(GpioPortA, GpioPin0, &stcAdcAN0Port);
MCUStopOutput line 695 : 	Gpio_ClrIO(GpioPortD, GpioPin0);
MCUStopOutput line 713 : 	Gpio_ClrIO(GpioPortB, GpioPin0);
---- uiCurrentDuty Matches (17 in 1 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 266 : unsigned int uiCurrentDuty = PWM_MIN;
CellCurrentOutput line 1446 :     	uiCurrentDuty = PWM_MIN;
CellOutputCalibration line 1568 : 		if(uiCurrentDuty >= iTempSum)
CellOutputCalibration line 1570 : 			uiCurrentDuty -= ucStep;
CellOutputCalibration line 1571 : 			uiPWMHCnt = uiCurrentDuty;//uiPWMHCnt = uiCurrentDuty *10;
CellOutputCalibration line 1583 : 			uiCurrentDuty = PWM_MIN;
CellOutputCalibration line 1605 : 		iTempSum = uiCurrentDuty;
CellOutputCalibration line 1616 : 			uiCurrentDuty = iTempSum;
CellOutputCalibration line 1617 : 			uiPWMHCnt = uiCurrentDuty;//uiPWMHCnt = uiCurrentDuty *10;
CellOutputCalibration line 1622 : 			uiCurrentDuty = uiCurrentMaxDuty;
CellOutputCalibration line 1623 : 			uiPWMHCnt = uiCurrentDuty;//uiPWMHCnt = uiCurrentDuty *10;
ChlorBoostProcess line 2421 : 		uiCurrentDuty = uiPWMHCnt;
CheckWaterSaltLevel line 2640 : 	if((uiCurrentDuty >= uiCurrentMaxDuty)&&(uiCellRealCurrent < uiLowSaltCurrent)&&(bStopOutputFlag == _FALSE))
CellCurrentCycleOutput line 2680 : 			uiCurrentDuty = PWM_MIN;
---- _REVERSE Matches (6 in 2 files) ----
CellPolarityReverse line 1394 : 		//Eeprom_WriteBytes(CELL_POLARITY_ADDR,_REVERSE);
CellPolarityReverse line 1395 : 		ucData[3] = _REVERSE;
BoostModeHandler line 2545 : 				if(ucCellPolarity == _REVERSE)
BoostModeHandler line 2565 : 				if(ucCellPolarity == _REVERSE)
BoostModeHandler line 2588 : 				if(ucCellPolarity == _REVERSE)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\inc\global.h line 55 : #define _REVERSE                                 0
---- ucCellCurrent Matches (40 in 2 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\app_uart.c line 736 : extern unsigned char ucCellCurrent;
IOT_RESOLVE_WIFI_DATA line 794 : 			ucCellCurrent = temp;
IOT_RESOLVE_WIFI_DATA line 796 : 			CellOutputCurrentAdjustAPI(ucCellCurrent);
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 186 : unsigned char ucCellCurrent;
ReadCellCurrentSetting line 370 : 	ucCellCurrent = Eeprom_ReadBytes(CELL_CURRENT_ADDR);
SaveCellCurrent line 423 :     ucData[4] = ucCellCurrent;	
UpdateUserData line 800 : 	ucCellCurrent = ucData[4];
CellRealCurrentDisplay line 1313 : 		if(ucCellCurrent == USER_MIN)
CalculateThresholdLimit line 1418 :     iTemp =iTemp * ucCellCurrent;
CellOutputCalibration line 1490 :     if(ucCellCurrent == 0)
CellOutputCurrentAdjust line 1769 : 			if(ucCellCurrent<USER_MAX)
CellOutputCurrentAdjust line 1770 : 				ucCellCurrent+=5;
CellOutputCurrentAdjust line 1772 : 			uiCurrentMaxDuty = ucDutyDiv*ucCellCurrent;
CellOutputCurrentAdjust line 1780 : 			if(ucCellCurrent>5)
CellOutputCurrentAdjust line 1781 : 				ucCellCurrent-=5;
CellOutputCurrentAdjust line 1783 : 				ucCellCurrent = USER_MIN;
CellOutputCurrentAdjust line 1785 : 			uiCurrentMaxDuty = ucDutyDiv*ucCellCurrent;
CellOutputCurrentAdjust line 1791 : 		uiOutputTime = 6*ucCellCurrent;
CellOutputCurrentAdjust line 1792 : 		iTemp = ucCellCurrent;
CellOutputCurrentAdjust line 1798 : 		if(ucCellCurrent>iTemp)
CellOutputCurrentAdjust line 1804 : 		CellCurrentOutput(ucCellCurrent);
CellOutputCurrentAdjustAPI line 1824 : 	ucCellCurrent=CellCurrent;
CellOutputCurrentAdjustAPI line 1835 : 		uiCurrentMaxDuty = ucDutyDiv*ucCellCurrent;
CellOutputCurrentAdjustAPI line 1840 : 		uiOutputTime = 6*ucCellCurrent;
CellOutputCurrentAdjustAPI line 1841 : 		iTemp = ucCellCurrent;
CellOutputCurrentAdjustAPI line 1847 : 		if(ucCellCurrent>iTemp)
CellOutputCurrentAdjustAPI line 1853 : 		CellCurrentOutput(ucCellCurrent);
CellOutputControl line 1886 : 	while (ucTemp<=ucCellCurrent);
CellOutputControl line 1887 : 	uiOutputTime = 6*ucCellCurrent;
CellOutputControl line 1889 : 	//CellCurrentOutput(ucCellCurrent);
PowerupFunctionModeSelect line 2212 : 	ucCellCurrent = USER_MAX;
WaterFlowFaultProcess line 2366 : 			CellCurrentOutput(ucCellCurrent);
SpecialSecretCodeProcess line 2418 : 			ucCellCurrent = USER_MAX;
CellCurrentCycleOutput line 2711 : 	if((bOutputFlag == _ENABLE)&&(ucCellCurrent < USER_MAX))
ProcessHandler line 2832 : 			ucOriginalCurrent = ucCellCurrent;
ProcessHandler line 2833 : 			ucCellCurrent = USER_MIN;	
ProcessHandler line 2840 : 			if(ucCellCurrent<ucOriginalCurrent)
ProcessHandler line 2841 : 				ucCellCurrent+=10;
ProcessHandler line 2857 : 			uiOutputTime = 6*ucCellCurrent;
ProcessHandler line 2858 : 			CellCurrentOutput(ucCellCurrent);	
---- _REVERSE Matches (6 in 2 files) ----
CellPolarityReverse line 1394 : 		//Eeprom_WriteBytes(CELL_POLARITY_ADDR,_REVERSE);
CellPolarityReverse line 1395 : 		ucData[3] = _REVERSE;
BoostModeHandler line 2545 : 				if(ucCellPolarity == _REVERSE)
BoostModeHandler line 2565 : 				if(ucCellPolarity == _REVERSE)
BoostModeHandler line 2588 : 				if(ucCellPolarity == _REVERSE)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\inc\global.h line 55 : #define _REVERSE                                 0
---- ucCellPolarity Matches (16 in 1 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 185 : unsigned char ucCellPolarity;
ReadCellPolarity line 365 : 	ucCellPolarity = Eeprom_ReadBytes(CELL_POLARITY_ADDR);
SaveCellPolarity line 417 : 	ucData[3] = ucCellPolarity;
SaveCalValueByDirection line 454 : 	if(ucCellPolarity == _FORWARD)
UpdateUserData line 799 : 	ucCellPolarity = ucData[3];
CellPolarityControl line 1362 : 	if(ucCellPolarity)//Forward
CellReverse line 1405 : 	if(ucCellPolarity)
CellReverse line 1406 : 		ucCellPolarity = 0;
CellReverse line 1408 : 		ucCellPolarity = 1;
CellReverseForPCBTest line 2250 : 		if(ucCellPolarity)
CellReverseForPCBTest line 2251 : 			ucCellPolarity = 0;
CellReverseForPCBTest line 2253 : 			ucCellPolarity = 1;	
ChlorBoostProcess line 2468 : 		if(ucCellPolarity ==_FORWARD)
BoostModeHandler line 2545 : 				if(ucCellPolarity == _REVERSE)
BoostModeHandler line 2565 : 				if(ucCellPolarity == _REVERSE)
BoostModeHandler line 2588 : 				if(ucCellPolarity == _REVERSE)
---- cnt Matches (78 in 13 files) ----
Adc_ConfigSqrMode line 622 :     M0P_ADC->SQR2_f.CNT  = u8AdcSampCnt - 1;
Adc_ConfigJqrMode line 646 :     M0P_ADC->JQR_f.CNT  = u8AdcSampCnt - 1;
Adt_SetCount line 1414 :     pstcM0PAdt->CNTER_f.CNT = u16Value;
Adt_GetCount line 1439 :     u16Value = pstcM0PAdt->CNTER_f.CNT;
Adt_ClearCount line 1463 :     pstcM0PAdt->CNTER_f.CNT = 0;
Adt_GetCntState line 1486 :     pstcAdtCntState->u16Counter = pstcM0PAdt->CNTER_f.CNT;
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\app_uart.c line 994 : u32 cnt=0;
APP_UART_1MS_HANDLE line 1030 : 	cnt++;
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\inc\app_uart.h line 150 : void system_delay(unsigned int cnt);
Bt_M0_Cnt16Set line 542 :             M0P_TIM0_MODE0->CNT_f.CNT = u16Data;
Bt_M0_Cnt16Set line 545 :             M0P_TIM1_MODE0->CNT_f.CNT = u16Data;
Bt_M0_Cnt16Set line 548 :             M0P_TIM2_MODE0->CNT_f.CNT = u16Data;
Bt_M0_Cnt16Get line 576 :             u16CntData = M0P_TIM0_MODE0->CNT_f.CNT;
Bt_M0_Cnt16Get line 579 :             u16CntData = M0P_TIM1_MODE0->CNT_f.CNT;
Bt_M0_Cnt16Get line 582 :             u16CntData = M0P_TIM2_MODE0->CNT_f.CNT;
Bt_M1_Cnt16Set line 880 :             M0P_TIM0_MODE1->CNT_f.CNT = u16Data;
Bt_M1_Cnt16Set line 883 :             M0P_TIM1_MODE1->CNT_f.CNT = u16Data;
Bt_M1_Cnt16Set line 886 :             M0P_TIM2_MODE1->CNT_f.CNT = u16Data;
Bt_M1_Cnt16Get line 914 :             u16CntData = M0P_TIM0_MODE1->CNT_f.CNT;
Bt_M1_Cnt16Get line 917 :             u16CntData = M0P_TIM1_MODE1->CNT_f.CNT;
Bt_M1_Cnt16Get line 920 :             u16CntData = M0P_TIM2_MODE1->CNT_f.CNT;
Bt_M23_Cnt16Set line 1138 :     pstcM0PBt->CNT_f.CNT       = u16Data;
Bt_M23_Cnt16Get line 1158 :     u16CntData = pstcM0PBt->CNT_f.CNT;
Debug_UartInit line 165 :     //M0P_BT0->CNT = u32ReloadVal;
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\driver\src\dmac.c line 110 : #define DMA_DTCTL_CNT_Pos                   (16U)                               /*!< DMA_DTCTLx: CNT Position */
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\driver\src\dmac.c line 111 : #define DMA_DTCTL_CNT_Msk                   (0xFFFFU << DMA_DTCTL_CNT_Pos)      /*!< DMA_DTCTLx: CNT Mask 0xFFFF0000 */
{anonstc_adc_sqr2_field_t} line 189 :     __IO uint32_t CNT                       : 4;
{anonstc_adc_jqr_field_t} line 198 :     __IO uint32_t CNT                       : 2;
{anonstc_lptimer_cnt_field_t} line 2763 :     __IO uint32_t CNT                       :16;
{anonstc_pca_cnt_field_t} line 2955 :     __IO uint32_t CNT                       :16;
{anonstc_pcnt_cnt_field_t} line 3160 :     __IO uint16_t CNT                       :16;
{anonstc_rng_mode_field_t} line 3294 :     __IO uint32_t CNT                       : 3;
{anonstc_tim0_mode0_cnt_field_t} line 3562 :     __IO uint32_t CNT                       :16;
{anonstc_tim0_mode1_cnt_field_t} line 3603 :     __IO uint32_t CNT                       :16;
{anonstc_tim0_mode23_cnt_field_t} line 3673 :     __IO uint32_t CNT                       :16;
{anonstc_tim1_mode0_cnt_field_t} line 3827 :     __IO uint32_t CNT                       :16;
{anonstc_tim1_mode1_cnt_field_t} line 3868 :     __IO uint32_t CNT                       :16;
{anonstc_tim1_mode23_cnt_field_t} line 3938 :     __IO uint32_t CNT                       :16;
{anonstc_tim2_mode0_cnt_field_t} line 4092 :     __IO uint32_t CNT                       :16;
{anonstc_tim2_mode1_cnt_field_t} line 4133 :     __IO uint32_t CNT                       :16;
{anonstc_tim2_mode23_cnt_field_t} line 4203 :     __IO uint32_t CNT                       :16;
{anonstc_tim3_mode0_cnt_field_t} line 4357 :     __IO uint32_t CNT                       :16;
{anonstc_tim3_mode1_cnt_field_t} line 4398 :     __IO uint32_t CNT                       :16;
{anonstc_tim3_mode23_cnt_field_t} line 4468 :     __IO uint32_t CNT                       :16;
{anonstc_tim4_cnter_field_t} line 4688 :     __IO uint32_t CNT                       :16;
{anonstc_tim5_cnter_field_t} line 5174 :     __IO uint32_t CNT                       :16;
{anonstc_tim6_cnter_field_t} line 5660 :     __IO uint32_t CNT                       :16;
{anonM0P_LPTIMER_TypeDef}::{anon_union} line 7595 :         __IO uint32_t CNT;
{anonM0P_PCA_TypeDef}::{anon_union} line 7714 :         __IO uint32_t CNT;
{anonM0P_PCNT_TypeDef}::{anon_union} line 7877 :         __IO uint16_t CNT;
{anonM0P_TIM0_MODE0_TypeDef}::{anon_union} line 8145 :         __IO uint32_t CNT;
{anonM0P_TIM0_MODE1_TypeDef}::{anon_union} line 8181 :         __IO uint32_t CNT;
{anonM0P_TIM0_MODE23_TypeDef}::{anon_union} line 8233 :         __IO uint32_t CNT;
{anonM0P_TIM1_MODE0_TypeDef}::{anon_union} line 8309 :         __IO uint32_t CNT;
{anonM0P_TIM1_MODE1_TypeDef}::{anon_union} line 8345 :         __IO uint32_t CNT;
{anonM0P_TIM1_MODE23_TypeDef}::{anon_union} line 8397 :         __IO uint32_t CNT;
{anonM0P_TIM2_MODE0_TypeDef}::{anon_union} line 8473 :         __IO uint32_t CNT;
{anonM0P_TIM2_MODE1_TypeDef}::{anon_union} line 8509 :         __IO uint32_t CNT;
{anonM0P_TIM2_MODE23_TypeDef}::{anon_union} line 8561 :         __IO uint32_t CNT;
{anonM0P_TIM3_MODE0_TypeDef}::{anon_union} line 8637 :         __IO uint32_t CNT;
{anonM0P_TIM3_MODE1_TypeDef}::{anon_union} line 8673 :         __IO uint32_t CNT;
{anonM0P_TIM3_MODE23_TypeDef}::{anon_union} line 8725 :         __IO uint32_t CNT;
Lpt_Cnt16Get line 280 :     u16CntData = M0P_LPTIMER->CNT_f.CNT;
Pca_Cnt16Set line 692 :     M0P_PCA->CNT_f.CNT = u16Data;
Pca_Cnt16Get line 710 :     u16CntData = M0P_PCA->CNT_f.CNT;
PCNT_Count line 256 :    return  M0P_PCNT->CNT;
Rng_Init line 100 :     M0P_RNG->MODE_f.CNT     = 6;
Rng_Init line 111 :     M0P_RNG->MODE_f.CNT     = 4;
Rng_Generate line 140 :     M0P_RNG->MODE_f.CNT     = 6;
Rng_Generate line 150 :     M0P_RNG->MODE_f.CNT     = 4;
Rng_Generate line 151 :     M0P_RNG->MODE_f.CNT     = 4;
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\driver\src\timer3.c line 471 :  ** \param [in]  u16Data          CNT 16位初值
Tim3_M0_Cnt16Set line 479 :     M0P_TIM3_MODE0->CNT_f.CNT = u16Data;
Tim3_M0_Cnt16Get line 497 :     u16CntData = M0P_TIM3_MODE0->CNT_f.CNT;
Tim3_M1_Cnt16Set line 691 :     M0P_TIM3_MODE1->CNT_f.CNT = u16Data;
Tim3_M1_Cnt16Get line 709 :     u16CntData = M0P_TIM3_MODE1->CNT_f.CNT;
Tim3_M23_Cnt16Set line 850 :     M0P_TIM3_MODE23->CNT_f.CNT = u16Data;
Tim3_M23_Cnt16Get line 868 :     u16CntData = M0P_TIM3_MODE23->CNT_f.CNT;
---- ucCellPolarity Matches (20 in 2 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\app_uart.c line 69 : extern unsigned char  ucCellPolarity;
IOT_RESOLVE_WIFI_DATA line 796 : 			ucCellPolarity=temp;
IOT_RESOLVE_WIFI_DATA line 820 : 			if(ucCellPolarity!=temp){
IOT_RESOLVE_WIFI_DATA line 821 : 				ucCellPolarity=temp;
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 185 : unsigned char ucCellPolarity;
ReadCellPolarity line 365 : 	ucCellPolarity = Eeprom_ReadBytes(CELL_POLARITY_ADDR);
SaveCellPolarity line 417 : 	ucData[3] = ucCellPolarity;
SaveCalValueByDirection line 454 : 	if(ucCellPolarity == _FORWARD)
UpdateUserData line 799 : 	ucCellPolarity = ucData[3];
CellPolarityControl line 1361 : 	if(ucCellPolarity)//Forward
CellReverse line 1404 : 	if(ucCellPolarity)
CellReverse line 1405 : 		ucCellPolarity = 0;
CellReverse line 1407 : 		ucCellPolarity = 1;
CellReverseForPCBTest line 2249 : 		if(ucCellPolarity)
CellReverseForPCBTest line 2250 : 			ucCellPolarity = 0;
CellReverseForPCBTest line 2252 : 			ucCellPolarity = 1;	
ChlorBoostProcess line 2467 : 		if(ucCellPolarity ==_FORWARD)
BoostModeHandler line 2544 : 				if(ucCellPolarity == _REVERSE)
BoostModeHandler line 2564 : 				if(ucCellPolarity == _REVERSE)
BoostModeHandler line 2587 : 				if(ucCellPolarity == _REVERSE)
---- WATER_FLOW_CHECK Matches (11 in 2 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 45 : #if(WATER_FLOW_CHECK == _ENABLE)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 166 : #if(WATER_FLOW_CHECK == _ENABLE)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 210 : #if(WATER_FLOW_CHECK == _ENABLE)
CellRealCurrentDisplay line 1322 : 	#if(WATER_FLOW_CHECK == _ENABLE)
CellCurrentOutput line 1430 : #if(WATER_FLOW_CHECK == _ENABLE)	
CellOutputCalibration line 1495 : #if(WATER_FLOW_CHECK == _ENABLE)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 2301 : #if(WATER_FLOW_CHECK == _ENABLE)
ProcessHandler line 2736 : #if(WATER_FLOW_CHECK == _ENABLE)
ProcessHandler line 2782 : 		#if(WATER_FLOW_CHECK == _ENABLE)	 	
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\inc\global.h line 97 : #define WATER_FLOW_CHECK                         _ENABLE
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\inc\global.h line 134 : #define WATER_FLOW_CHECK                         _ENABLE //
---- eIOTEVENT Matches (7 in 4 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\app_uart.c line 990 : unsigned char eIOTEVENT=_IOT_EVENT_NULL;
IOTEventHandler line 995 : 	switch(eIOTEVENT){
IOTEventHandler line 1012 : 	eIOTEVENT=_IOT_EVENT_NULL;
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\inc\app_uart.h line 162 : extern unsigned char eIOTEVENT;
WaterFlowFaultProcess line 2356 : 		eIOTEVENT|=_IOT_EVENT_ERROR;
KeyHandler line 177 : 				eIOTEVENT=_IOT_EVENT_UPDATE_KEY;
KeyHandler line 181 : 				eIOTEVENT=_IOT_EVENT_UPDATE_KEY;
---- eIOTEVENT Matches (7 in 4 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\app_uart.c line 990 : unsigned char eIOTEVENT=_IOT_EVENT_NULL;
IOTEventHandler line 1009 : 	if(eIOTEVENT&_IOT_EVENT_ERROR==_IOT_EVENT_ERROR){
IOTEventHandler line 1019 : 	eIOTEVENT=_IOT_EVENT_NULL;
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\inc\app_uart.h line 162 : extern unsigned char eIOTEVENT;
WaterFlowFaultProcess line 2356 : 		eIOTEVENT|=_IOT_EVENT_ERROR;
KeyHandler line 177 : 				eIOTEVENT|=_IOT_EVENT_UPDATE_KEY;
KeyHandler line 181 : 				eIOTEVENT|=_IOT_EVENT_UPDATE_KEY;
---- LEDFlashSetting Matches (25 in 1 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 606 : void LEDFlashSetting(unsigned int ucID,unsigned char ucOnOff)
ModelChangeLED line 1120 : 		LEDFlashSetting(LED_5,_ON);
ModelChangeLED line 1123 : 		LEDFlashSetting(LED_5,_OFF);
CellPolarityControl line 1372 : 		LEDFlashSetting(LED_11,_OFF);
CellPolarityControl line 1383 : 		LEDFlashSetting(LED_11,_ON);
CellOutputCurrentAdjust line 1670 : 			LEDFlashSetting(LED_11,_ON);
CellOutputCurrentAdjust line 1802 : 			LEDFlashSetting(uiLedNum,_ON);
CellOutputCurrentAdjustAPI line 1851 : 			LEDFlashSetting(uiLedNum,_ON);
ReverseTimeSettingKeyProcess line 1939 : 			LEDFlashSetting(LED_3,_OFF);
ReverseTimeSettingKeyProcess line 1950 : 			LEDFlashSetting(LED_2,_OFF);
PowerupFunctionModeSelect line 2115 : 		LEDFlashSetting(0x3C00,_ON);
PowerupFunctionModeSelect line 2125 : 		LEDFlashSetting(0x0007,_ON);
WaterFlowFaultProcess line 2362 : 			LEDFlashSetting(LED_12,_ON);	
WaterFlowFaultProcess line 2368 : 			LEDFlashSetting(LED_12,_OFF);
SpecialSecretCodeProcess line 2423 : 			LEDFlashSetting(LED_12|LED_11,_ON);
SpecialSecretCodeProcess line 2436 : 		LEDFlashSetting((LED_1|LED_10),_ON);
ChlorBoostProcess line 2471 : 		LEDFlashSetting(LED_12,_OFF);
ChlorBoostProcess line 2474 : 			LEDFlashSetting(LED_11,_OFF);
ComboKeyProcess line 2524 : 		LEDFlashSetting(LED_12,_ON);
BoostModeHandler line 2550 : 				LEDFlashSetting(LED_11,_ON);
BoostModeHandler line 2551 : 				LEDFlashSetting(0x3FF,_ON);
BoostModeHandler line 2570 : 				LEDFlashSetting(LED_11,_ON);
BoostModeHandler line 2593 : 				LEDFlashSetting(LED_11,_ON);
CheckWaterSaltLevel line 2694 : 			LEDFlashSetting(LED_12,_ON);
CheckWaterSaltLevel line 2704 : 				LEDFlashSetting(LED_12,_OFF);
---- CheckWaterFlow Matches (2 in 1 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 2304 : void CheckWaterFlow(void)
ProcessHandler line 2742 : 	CheckWaterFlow();		//Water Flow Sensor
---- LED_12 Matches (18 in 1 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 101 : 	LED_12 =BIT11
LEDControl line 547 : 			case LED_12:		//D12
LEDControl line 598 : 			case LED_12:		//D12
WaterFlowFaultProcess line 2362 : 			LEDFlashSetting(LED_12,_ON);	
WaterFlowFaultProcess line 2368 : 			LEDFlashSetting(LED_12,_OFF);
WaterFlowFaultProcess line 2369 : 			LEDControl(LED_12,_OFF);
SpecialSecretCodeProcess line 2423 : 			LEDFlashSetting(LED_12|LED_11,_ON);
ChlorBoostProcess line 2471 : 		LEDFlashSetting(LED_12,_OFF);
ComboKeyProcess line 2512 : 		LEDControl(LED_12,_ON);
ComboKeyProcess line 2514 : 		LEDControl(LED_12,_OFF);
ComboKeyProcess line 2516 : 		LEDControl(LED_12,_ON);
ComboKeyProcess line 2518 : 		LEDControl(LED_12,_OFF);
ComboKeyProcess line 2520 : 		LEDControl(LED_12,_ON);
ComboKeyProcess line 2522 : 		LEDControl(LED_12,_OFF);
ComboKeyProcess line 2524 : 		LEDFlashSetting(LED_12,_ON);
CheckWaterSaltLevel line 2694 : 			LEDFlashSetting(LED_12,_ON);
CheckWaterSaltLevel line 2704 : 				LEDFlashSetting(LED_12,_OFF);
CheckWaterSaltLevel line 2705 : 				LEDControl(LED_12,_OFF);
---- UU Matches (11 in 1 files) ----
IOT_SEND_SELF_STATUE line 735 : 	unsigned char str[]="AT+ADA=\"s\"\,\"UU\"\,\"i\"\ ,92000\x0d\x0a";
IOT_SEND_SELF_STATUE line 737 : 	UartSendString("AT+ADA=\"s\"\,\"UU\"\,\"i\"\ ,90001\x0d\x0a");
IOT_SEND_SELF_STATUE line 739 : 	UartSendString("AT+ADA=\"s\"\,\"UU\"\,\"i\"\ ,91001\x0d\x0a");
IOT_SEND_SELF_STATUE line 741 : 	//UartSendString("AT+ADA=\"s\"\,\"UU\"\,\"i\"\ ,92100\x0d\x0a");
IOT_SEND_SELF_STATUE line 742 : 	temp=sizeof("AT+ADA=\"s\"\,\"UU\"\,\"i\"\ ,920")-2;
IOTEventHandler line 997 : 		unsigned char str[]="AT+ADA=\"s\"\,\"UU\"\,\"i\"\ ,92000\x0d\x0a";
IOTEventHandler line 1000 : 		//UartSendString("AT+ADA=\"s\"\,\"UU\"\,\"i\"\ ,92100\x0d\x0a");
IOTEventHandler line 1001 : 		temp=sizeof("AT+ADA=\"s\"\,\"UU\"\,\"i\"\ ,920")-2;
IOTEventHandler line 1009 : 		unsigned char str[]="AT+ADA=\"s\"\,\"UU\"\,\"i\"\ ,91000\x0d\x0a";
IOTEventHandler line 1012 : 		//UartSendString("AT+ADA=\"s\"\,\"UU\"\,\"i\"\ ,92100\x0d\x0a");
IOTEventHandler line 1013 : 		temp=sizeof("AT+ADA=\"s\"\,\"UU\"\,\"i\"\ ,91")-2;
---- ucIOTEVENTMessage Matches (8 in 3 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\app_uart.c line 991 : unsigned char ucIOTEVENTMessage=0;
IOTEventHandler line 1017 : 		str[temp++]=ucIOTEVENTMessage/10+'0';
IOTEventHandler line 1018 : 		str[temp++]=ucIOTEVENTMessage%10+'0';
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\inc\app_uart.h line 163 : extern unsigned char ucIOTEVENTMessage;
WaterFlowFaultProcess line 2361 : 			ucIOTEVENTMessage=21;
WaterFlowFaultProcess line 2367 : 			ucIOTEVENTMessage=20;
CheckWaterSaltLevel line 2696 : 			ucIOTEVENTMessage=11;
CheckWaterSaltLevel line 2709 : 				ucIOTEVENTMessage=10;
---- 911 Matches (0 in 0 files) ----
---- 911 Search Errors Encountered (2) ----
The following 2 files could not be processed:
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\aes.c : File could not be opened.
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\inc\aes.h : File could not be opened.
---- 911 Matches (0 in 0 files) ----
---- 911 Search Errors Encountered (2) ----
The following 2 files could not be processed:
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\aes.c : File could not be opened.
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\inc\aes.h : File could not be opened.
---- IOT_POWER_ON Matches (11 in 2 files) ----
IOKeepOnline line 368 : 			if(IOT_POWER_ON)
IOT_RESOLVE_WIFI_DATA line 767 : 			if (IOT_POWER_ON){
IOT_RESOLVE_WIFI_DATA line 770 : 				IOT_POWER_ON=!IOT_POWER_ON;
IOT_RESOLVE_WIFI_DATA line 781 :             if (!IOT_POWER_ON){
IOT_RESOLVE_WIFI_DATA line 784 : 				IOT_POWER_ON=!IOT_POWER_ON;
IOT_RESOLVE_WIFI_DATA line 796 : 			if (IOT_POWER_ON)
IOTHandler line 1036 : 	if(!IOT_POWER_ON)
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\inc\app_uart.h line 16 : extern unsigned char IOT_POWER_ON ;
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\inc\app_uart.h line 34 : extern unsigned char IOT_POWER_ON;
---- uiCellRealCurrent Matches (15 in 1 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 245 : unsigned int  uiCellRealCurrent = 0;
GetCellRealCurrent line 1182 : 		uiCellRealCurrent = 0;
GetCellRealCurrent line 1220 : 			uiCellRealCurrent = (uiTemp/10);	
GetCellRealCurrent line 1226 : 			uiCellRealCurrent = 0;
GetCellRealCurrent line 1270 : 			uiCellRealCurrent = (uiTemp/100);	
GetCellRealCurrent line 1276 : 			uiCellRealCurrent = 0;
CellRealCurrentDisplay line 1301 : 		//LEDDisplayHexValue(uiCellRealCurrent);
CellRealCurrentDisplay line 1316 : 			uiCellRealCurrent = 0;
CellRealCurrentDisplay line 1318 : 		iTemp = uiCellRealCurrent;
CellOutputCalibration line 1549 : 	if(uiCellRealCurrent>uiStdHigh)
CellOutputCalibration line 1552 : 		uiTol = uiCellRealCurrent - uiStdH;
CellOutputCalibration line 1594 : 	else if(uiCellRealCurrent<uiStdLow)
CellOutputCalibration line 1597 : 		uiTol = uiStdL - uiCellRealCurrent;
CheckCellCurrent line 2380 : 	if(uiCellRealCurrent<150)
CheckWaterSaltLevel line 2689 : 	if((uiCurrentDuty >= uiCurrentMaxDuty)&&(uiCellRealCurrent < uiLowSaltCurrent)&&(bStopOutputFlag == _FALSE))
---- _IOT_EVENT_ERROR Matches (7 in 3 files) ----
IOTEventHandler line 1025 : 	if((eIOTEVENT&_IOT_EVENT_ERROR)==_IOT_EVENT_ERROR){
IOTEventHandler line 1035 : 		eIOTEVENT&=~_IOT_EVENT_ERROR;
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\inc\app_uart.h line 169 : 	_IOT_EVENT_ERROR=2,
WaterFlowFaultProcess line 2362 : 		eIOTEVENT|=_IOT_EVENT_ERROR;
CheckWaterSaltLevel line 2701 : 			eIOTEVENT|=_IOT_EVENT_ERROR;
CheckWaterSaltLevel line 2714 : 				eIOTEVENT|=_IOT_EVENT_ERROR;
---- uiIOTEVENTCNT Matches (7 in 3 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\app_uart.c line 1006 : unsigned int uiIOTEVENTCNT=0;
IOTEventHandler line 1015 : 		if(uiIOTEVENTCNT==0){
APP_UART_1MS_HANDLE line 1087 : 	if(uiIOTEVENTCNT>0)
APP_UART_1MS_HANDLE line 1088 : 		uiIOTEVENTCNT--;
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\inc\app_uart.h line 164 : extern unsigned int uiIOTEVENTCNT;
KeyHandler line 178 : 				uiIOTEVENTCNT=2000;
KeyHandler line 183 : 				uiIOTEVENTCNT=2000;
---- uiCellRealCurrent Matches (17 in 1 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 245 : unsigned int  uiCellRealCurrent = 0;
GetCellRealCurrent line 1182 : 		uiCellRealCurrent = 0;
GetCellRealCurrent line 1220 : 			uiCellRealCurrent = (uiTemp/10);	
GetCellRealCurrent line 1226 : 			uiCellRealCurrent = 0;
GetCellRealCurrent line 1270 : 			uiCellRealCurrent = (uiTemp/100);	
GetCellRealCurrent line 1276 : 			uiCellRealCurrent = 0;
GetCellRealCurrent line 1278 : 			if(uiCellRealCurrent!=IOTuiCellRealCurrent)
GetCellRealCurrent line 1280 : 				IOTuiCellRealCurrent=uiCellRealCurrent;
CellRealCurrentDisplay line 1307 : 		//LEDDisplayHexValue(uiCellRealCurrent);
CellRealCurrentDisplay line 1322 : 			uiCellRealCurrent = 0;
CellRealCurrentDisplay line 1324 : 		iTemp = uiCellRealCurrent;
CellOutputCalibration line 1556 : 	if(uiCellRealCurrent>uiStdHigh)
CellOutputCalibration line 1559 : 		uiTol = uiCellRealCurrent - uiStdH;
CellOutputCalibration line 1601 : 	else if(uiCellRealCurrent<uiStdLow)
CellOutputCalibration line 1604 : 		uiTol = uiStdL - uiCellRealCurrent;
CheckCellCurrent line 2387 : 	if(uiCellRealCurrent<150)
CheckWaterSaltLevel line 2696 : 	if((uiCurrentDuty >= uiCurrentMaxDuty)&&(uiCellRealCurrent < uiLowSaltCurrent)&&(bStopOutputFlag == _FALSE))
---- _IOT_EVENT_UPDATE_CURRENT Matches (4 in 2 files) ----
IOTEventHandler line 1029 : 		if(eIOTEVENT&_IOT_EVENT_UPDATE_CURRENT==_IOT_EVENT_UPDATE_CURRENT){
IOTEventHandler line 1039 : 				eIOTEVENT&=~_IOT_EVENT_UPDATE_CURRENT;
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\inc\app_uart.h line 171 : 	_IOT_EVENT_UPDATE_CURRENT=4,
---- uiCellRealCurrent Matches (17 in 1 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\ctrl.c line 245 : unsigned int  uiCellRealCurrent = 0;
GetCellRealCurrent line 1182 : 		uiCellRealCurrent = 0;
GetCellRealCurrent line 1220 : 			uiCellRealCurrent = (uiTemp/10);	
GetCellRealCurrent line 1226 : 			uiCellRealCurrent = 0;
GetCellRealCurrent line 1270 : 			uiCellRealCurrent = (uiTemp/100);	
GetCellRealCurrent line 1276 : 			uiCellRealCurrent = 0;
GetCellRealCurrent line 1278 : 			if(uiCellRealCurrent!=IOTuiCellRealCurrent)
GetCellRealCurrent line 1280 : 				IOTuiCellRealCurrent=uiCellRealCurrent;
CellRealCurrentDisplay line 1307 : 		//LEDDisplayHexValue(uiCellRealCurrent);
CellRealCurrentDisplay line 1322 : 			uiCellRealCurrent = 0;
CellRealCurrentDisplay line 1324 : 		iTemp = uiCellRealCurrent;
CellOutputCalibration line 1556 : 	if(uiCellRealCurrent>uiStdHigh)
CellOutputCalibration line 1559 : 		uiTol = uiCellRealCurrent - uiStdH;
CellOutputCalibration line 1601 : 	else if(uiCellRealCurrent<uiStdLow)
CellOutputCalibration line 1604 : 		uiTol = uiStdL - uiCellRealCurrent;
CheckCellCurrent line 2387 : 	if(uiCellRealCurrent<150)
CheckWaterSaltLevel line 2696 : 	if((uiCurrentDuty >= uiCurrentMaxDuty)&&(uiCellRealCurrent < uiLowSaltCurrent)&&(bStopOutputFlag == _FALSE))
---- uiIOTEVENTCURRENT Matches (5 in 3 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\app_uart.c line 1007 : unsigned int uiIOTEVENTCURRENT=0;
APP_UART_1MS_HANDLE line 1109 : 	if(uiIOTEVENTCURRENT>0)
APP_UART_1MS_HANDLE line 1110 : 		uiIOTEVENTCURRENT--;
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\inc\app_uart.h line 165 : extern unsigned int uiIOTEVENTCURRENT;
GetCellRealCurrent line 1282 : 				uiIOTEVENTCURRENT=2000;
---- _IOT_EVENT_UPDATE_CURRENT Matches (5 in 3 files) ----
IOTEventHandler line 1029 : 		if(eIOTEVENT&_IOT_EVENT_UPDATE_CURRENT==_IOT_EVENT_UPDATE_CURRENT){
IOTEventHandler line 1039 : 				eIOTEVENT&=~_IOT_EVENT_UPDATE_CURRENT;
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\inc\app_uart.h line 171 : 	_IOT_EVENT_UPDATE_CURRENT=4,
CellRealCurrentDisplay line 1332 : 		eIOTEVENT|=_IOT_EVENT_UPDATE_CURRENT;
---- uiIOTEVENTCURRENT Matches (6 in 3 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\app_uart.c line 1007 : unsigned int uiIOTEVENTCURRENT=0;
IOTEventHandler line 1030 : 			if(uiIOTEVENTCURRENT==0){
APP_UART_1MS_HANDLE line 1109 : 	if(uiIOTEVENTCURRENT>0)
APP_UART_1MS_HANDLE line 1110 : 		uiIOTEVENTCURRENT--;
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\inc\app_uart.h line 165 : extern unsigned int uiIOTEVENTCURRENT;
CellRealCurrentDisplay line 1333 : 		uiIOTEVENTCURRENT=2000;
---- uiIOTEVENTCURRENTCNT Matches (6 in 3 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\app_uart.c line 1007 : unsigned int uiIOTEVENTCURRENTCNT=0;
IOTEventHandler line 1030 : 			if(uiIOTEVENTCURRENTCNT==0){
APP_UART_1MS_HANDLE line 1109 : 	if(uiIOTEVENTCURRENTCNT>0)
APP_UART_1MS_HANDLE line 1110 : 		uiIOTEVENTCURRENTCNT--;
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\inc\app_uart.h line 165 : extern unsigned int uiIOTEVENTCURRENTCNT;
CellRealCurrentDisplay line 1333 : 		uiIOTEVENTCURRENTCNT=2000;
---- IOTuiCellRealCurrent Matches (7 in 3 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\app_uart.c line 70 : unsigned char  IOTuiCellRealCurrent=0;
IOTEventHandler line 1035 : 				str[temp++]=IOTuiCellRealCurrent/100+'0';
IOTEventHandler line 1036 : 				str[temp++]=IOTuiCellRealCurrent%100/10+'0';
IOTEventHandler line 1037 : 				str[temp++]=IOTuiCellRealCurrent%10+'0';
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\inc\app_uart.h line 166 : extern unsigned char  IOTuiCellRealCurrent;
CellRealCurrentDisplay line 1329 : 	if(ucLEDNum!=IOTuiCellRealCurrent)
CellRealCurrentDisplay line 1331 : 		IOTuiCellRealCurrent=ucLEDNum;
---- IOTuiCellRealCurrent Matches (7 in 3 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\app_uart.c line 70 : unsigned char  IOTuiCellRealCurrent=0;
IOTEventHandler line 1035 : 				str[temp++]=IOTuiCellRealCurrent/100+'0';
IOTEventHandler line 1036 : 				str[temp++]=IOTuiCellRealCurrent%100/10+'0';
IOTEventHandler line 1037 : 				str[temp++]=IOTuiCellRealCurrent%10+'0';
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\inc\app_uart.h line 166 : extern unsigned char  IOTuiCellRealCurrent;
CellRealCurrentDisplay line 1329 : 	if(ucLEDNum!=IOTuiCellRealCurrent)
CellRealCurrentDisplay line 1331 : 		IOTuiCellRealCurrent=ucLEDNum;
---- uiIOTEVENTCURRENTCNT Matches (6 in 3 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\app_uart.c line 1009 : unsigned int uiIOTEVENTCURRENTCNT=0;
IOTEventHandler line 1034 : 			if(uiIOTEVENTCURRENTCNT==0){
APP_UART_1MS_HANDLE line 1114 : 	if(uiIOTEVENTCURRENTCNT>0)
APP_UART_1MS_HANDLE line 1115 : 		uiIOTEVENTCURRENTCNT--;
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\inc\app_uart.h line 165 : extern unsigned int uiIOTEVENTCURRENTCNT;
CellRealCurrentDisplay line 1333 : 		uiIOTEVENTCURRENTCNT=2000;
---- IOTUartQueuePush Matches (3 in 2 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\app_uart.c line 395 : unsigned char  IOTUartQueuePush(unsigned char *data)
APP_UART_1MS_HANDLE line 1102 : 		IOTUartQueuePush(u8RX_BUFF);
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\inc\app_uart.h line 149 : unsigned char  IOTUartQueuePush(unsigned char *data);
---- pEusartQueueResolve Matches (11 in 1 files) ----
F:\develop\KlST\SPA\Program\SPA4G_GIT\SW_HyClor_2020\SRC\hyclor\src\app_uart.c line 388 : struct  _UartQueue * pEusartQueueResolve;
IOTUartQueueInit line 392 : 	pEusartQueueResolve=UartQueueBuff;
IOTUartQueuePush line 397 : 	if((pEusartQueueStorage!=pEusartQueueResolve)||((pEusartQueueStorage==pEusartQueueResolve)&&(pEusartQueueStorage->
IOTUartQueuePop line 415 : 	struct	_UartQueue *q=pEusartQueueResolve;
IOTUartQueuePop line 416 : 	memcpy(data,&pEusartQueueResolve->DATABuff[0],NUM_RX_MAX);
IOTUartQueuePop line 417 : 	pEusartQueueResolve->status=empty;
IOTUartQueuePop line 418 : 	if(pEusartQueueResolve==&UartQueueBuff[UART_QUEUE_LENTH-1])
IOTUartQueuePop line 419 : 		pEusartQueueResolve=UartQueueBuff;
IOTUartQueuePop line 421 : 		pEusartQueueResolve++;
IOTUartQueueioifempty line 432 : 	if(pEusartQueueResolve->status==empty)
